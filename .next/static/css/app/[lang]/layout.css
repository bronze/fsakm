
  !*** css ./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./node_modules/.pnpm/nextra-theme-docs@4.2.17_@types+react@19.0.10_next@15.3.2_nextra@4.2.17_react-dom@19.1.0_react@19.1.0/node_modules/nextra-theme-docs/dist/style.css ***!

/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --x-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --x-color-red-100: oklch(0.936 0.032 17.717);
    --x-color-red-200: oklch(0.885 0.062 18.334);
    --x-color-red-500: oklch(0.637 0.237 25.331);
    --x-color-red-900: oklch(0.396 0.141 25.723);
    --x-color-orange-50: oklch(0.98 0.016 73.684);
    --x-color-orange-100: oklch(0.954 0.038 75.164);
    --x-color-orange-300: oklch(0.837 0.128 66.29);
    --x-color-orange-400: oklch(0.75 0.183 55.934);
    --x-color-orange-800: oklch(0.47 0.157 37.304);
    --x-color-yellow-50: oklch(0.987 0.026 102.212);
    --x-color-yellow-100: oklch(0.973 0.071 103.193);
    --x-color-yellow-200: oklch(0.945 0.129 101.54);
    --x-color-yellow-700: oklch(0.554 0.135 66.442);
    --x-color-yellow-900: oklch(0.421 0.095 57.708);
    --x-color-blue-100: oklch(0.932 0.032 255.585);
    --x-color-blue-200: oklch(0.882 0.059 254.128);
    --x-color-blue-900: oklch(0.379 0.146 265.522);
    --x-color-slate-50: oklch(0.984 0.003 247.858);
    --x-color-slate-100: oklch(0.968 0.007 247.896);
    --x-color-slate-200: oklch(0.929 0.013 255.508);
    --x-color-slate-700: oklch(0.372 0.044 257.287);
    --x-color-slate-900: oklch(0.208 0.042 265.755);
    --x-color-gray-50: oklch(0.985 0.002 247.839);
    --x-color-gray-100: oklch(0.967 0.003 264.542);
    --x-color-gray-200: oklch(0.928 0.006 264.531);
    --x-color-gray-300: oklch(0.872 0.01 258.338);
    --x-color-gray-400: oklch(0.707 0.022 261.325);
    --x-color-gray-500: oklch(0.551 0.027 264.364);
    --x-color-gray-600: oklch(0.446 0.03 256.802);
    --x-color-gray-700: oklch(0.373 0.034 259.733);
    --x-color-gray-800: oklch(0.278 0.033 256.848);
    --x-color-gray-900: oklch(0.21 0.034 264.665);
    --x-color-neutral-50: oklch(0.985 0 0);
    --x-color-neutral-200: oklch(0.922 0 0);
    --x-color-neutral-400: oklch(0.708 0 0);
    --x-color-neutral-500: oklch(0.556 0 0);
    --x-color-neutral-600: oklch(0.439 0 0);
    --x-color-neutral-700: oklch(0.371 0 0);
    --x-color-neutral-800: oklch(0.269 0 0);
    --x-color-neutral-900: oklch(0.205 0 0);
    --x-color-black: #000;
    --x-color-white: #fff;
    --x-spacing: 0.25rem;
    --x-container-2xl: 42rem;
    --x-text-xs: 0.75rem;
    --x-text-xs--line-height: calc(1 / 0.75);
    --x-text-sm: 0.875rem;
    --x-text-sm--line-height: calc(1.25 / 0.875);
    --x-text-base: 1rem;
    --x-text-base--line-height: calc(1.5 / 1);
    --x-text-lg: 1.125rem;
    --x-text-lg--line-height: calc(1.75 / 1.125);
    --x-text-xl: 1.25rem;
    --x-text-xl--line-height: calc(1.75 / 1.25);
    --x-text-2xl: 1.5rem;
    --x-text-2xl--line-height: calc(2 / 1.5);
    --x-text-3xl: 1.875rem;
    --x-text-3xl--line-height: calc(2.25 / 1.875);
    --x-text-4xl: 2.25rem;
    --x-text-4xl--line-height: calc(2.5 / 2.25);
    --x-font-weight-normal: 400;
    --x-font-weight-medium: 500;
    --x-font-weight-semibold: 600;
    --x-font-weight-bold: 700;
    --x-tracking-tight: -0.025em;
    --x-leading-tight: 1.25;
    --x-radius-sm: 0.25rem;
    --x-radius-md: 0.375rem;
    --x-radius-lg: 0.5rem;
    --x-radius-xl: 0.75rem;
    --x-ease-out: cubic-bezier(0, 0, 0.2, 1);
    --x-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --x-animate-spin: spin 1s linear infinite;
    --x-blur-md: 12px;
    --x-default-transition-duration: 150ms;
    --x-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --x-color-nextra-bg: rgb(var(--nextra-bg));
    --x-color-primary-50: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 52%)
  );
    --x-color-primary-100: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 49%)
  );
    --x-color-primary-200: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 41%)
  );
    --x-color-primary-300: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 32%)
  );
    --x-color-primary-400: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 21%)
  );
    --x-color-primary-500: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 5%)
  );
    --x-color-primary-600: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      var(--nextra-primary-lightness)
  );
    --x-color-primary-700: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) - 6%)
  );
    --x-color-primary-800: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) - 13%)
  );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .x\:pointer-events-none {
    pointer-events: none;
  }
  .x\:sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .x\:absolute {
    position: absolute;
  }
  .x\:fixed {
    position: fixed;
  }
  .x\:relative {
    position: relative;
  }
  .x\:sticky {
    position: sticky;
  }
  .x\:inset-0 {
    inset: calc(var(--x-spacing) * 0);
  }
  .x\:end-1\.5 {
    inset-inline-end: calc(var(--x-spacing) * 1.5);
  }
  .x\:top-\(--nextra-navbar-height\) {
    top: var(--nextra-navbar-height);
  }
  .x\:top-0 {
    top: calc(var(--x-spacing) * 0);
  }
  .x\:top-2 {
    top: calc(var(--x-spacing) * 2);
  }
  .x\:top-14 {
    top: calc(var(--x-spacing) * 14);
  }
  .x\:right-4 {
    right: calc(var(--x-spacing) * 4);
  }
  .x\:bottom-0 {
    bottom: calc(var(--x-spacing) * 0);
  }
  .x\:-z-1 {
    z-index: calc(1 * -1);
  }
  .x\:z-1 {
    z-index: 1;
  }
  .x\:z-20 {
    z-index: 20;
  }
  .x\:z-30 {
    z-index: 30;
  }
  .x\:z-50 {
    z-index: 50;
  }
  .x\:order-last {
    order: 9999;
  }
  .x\:m-0 {
    margin: calc(var(--x-spacing) * 0);
  }
  .x\:-mx-4 {
    margin-inline: calc(var(--x-spacing) * -4);
  }
  .x\:mx-2 {
    margin-inline: calc(var(--x-spacing) * 2);
  }
  .x\:mx-2\.5 {
    margin-inline: calc(var(--x-spacing) * 2.5);
  }
  .x\:mx-4 {
    margin-inline: calc(var(--x-spacing) * 4);
  }
  .x\:mx-auto {
    margin-inline: auto;
  }
  .x\:my-1\.5 {
    margin-block: calc(var(--x-spacing) * 1.5);
  }
  .x\:my-2 {
    margin-block: calc(var(--x-spacing) * 2);
  }
  .x\:my-3 {
    margin-block: calc(var(--x-spacing) * 3);
  }
  .x\:my-4 {
    margin-block: calc(var(--x-spacing) * 4);
  }
  .x\:my-8 {
    margin-block: calc(var(--x-spacing) * 8);
  }
  .x\:ms-2 {
    margin-inline-start: calc(var(--x-spacing) * 2);
  }
  .x\:ms-3 {
    margin-inline-start: calc(var(--x-spacing) * 3);
  }
  .x\:ms-4 {
    margin-inline-start: calc(var(--x-spacing) * 4);
  }
  .x\:ms-6 {
    margin-inline-start: calc(var(--x-spacing) * 6);
  }
  .x\:ms-9 {
    margin-inline-start: calc(var(--x-spacing) * 9);
  }
  .x\:ms-12 {
    margin-inline-start: calc(var(--x-spacing) * 12);
  }
  .x\:ms-auto {
    margin-inline-start: auto;
  }
  .x\:me-1 {
    margin-inline-end: calc(var(--x-spacing) * 1);
  }
  .x\:me-auto {
    margin-inline-end: auto;
  }
  .x\:mt-1 {
    margin-top: calc(var(--x-spacing) * 1);
  }
  .x\:mt-1\.5 {
    margin-top: calc(var(--x-spacing) * 1.5);
  }
  .x\:mt-2 {
    margin-top: calc(var(--x-spacing) * 2);
  }
  .x\:mt-4 {
    margin-top: calc(var(--x-spacing) * 4);
  }
  .x\:mt-6 {
    margin-top: calc(var(--x-spacing) * 6);
  }
  .x\:mt-8 {
    margin-top: calc(var(--x-spacing) * 8);
  }
  .x\:mt-10 {
    margin-top: calc(var(--x-spacing) * 10);
  }
  .x\:mt-12 {
    margin-top: calc(var(--x-spacing) * 12);
  }
  .x\:mt-16 {
    margin-top: calc(var(--x-spacing) * 16);
  }
  .x\:mt-auto {
    margin-top: auto;
  }
  .x\:-mb-0\.5 {
    margin-bottom: calc(var(--x-spacing) * -0.5);
  }
  .x\:mb-2 {
    margin-bottom: calc(var(--x-spacing) * 2);
  }
  .x\:mb-8 {
    margin-bottom: calc(var(--x-spacing) * 8);
  }
  .x\:mb-12 {
    margin-bottom: calc(var(--x-spacing) * 12);
  }
  .x\:block {
    display: block;
  }
  .x\:flex {
    display: flex;
  }
  .x\:grid {
    display: grid;
  }
  .x\:hidden {
    display: none;
  }
  .x\:inline {
    display: inline;
  }
  .x\:inline-flex {
    display: inline-flex;
  }
  .x\:size-full {
    width: 100%;
    height: 100%;
  }
  .x\:h-0 {
    height: calc(var(--x-spacing) * 0);
  }
  .x\:h-5 {
    height: calc(var(--x-spacing) * 5);
  }
  .x\:h-7 {
    height: calc(var(--x-spacing) * 7);
  }
  .x\:h-12 {
    height: calc(var(--x-spacing) * 12);
  }
  .x\:h-\[calc\(100dvh-var\(--nextra-menu-height\)\)\] {
    height: calc(100dvh - var(--nextra-menu-height));
  }
  .x\:h-\[calc\(100dvh-var\(--nextra-navbar-height\)\)\] {
    height: calc(100dvh - var(--nextra-navbar-height));
  }
  .x\:max-h-64 {
    max-height: calc(var(--x-spacing) * 64);
  }
  .x\:max-h-\[calc\(100vh-var\(--nextra-navbar-height\)\)\] {
    max-height: calc(100vh - var(--nextra-navbar-height));
  }
  .x\:max-h-\[min\(calc\(100vh-5rem\)\,256px\)\]\! {
    max-height: min(calc(100vh - 5rem), 256px) !important;
  }
  .x\:min-h-\[calc\(100vh-var\(--nextra-navbar-height\)\)\] {
    min-height: calc(100vh - var(--nextra-navbar-height));
  }
  .x\:w-20 {
    width: calc(var(--x-spacing) * 20);
  }
  .x\:w-64 {
    width: calc(var(--x-spacing) * 64);
  }
  .x\:w-full {
    width: 100%;
  }
  .x\:max-w-\(--nextra-content-width\) {
    max-width: var(--nextra-content-width);
  }
  .x\:max-w-2xl\! {
    max-width: var(--x-container-2xl) !important;
  }
  .x\:max-w-6 {
    max-width: calc(var(--x-spacing) * 6);
  }
  .x\:max-w-\[50\%\] {
    max-width: 50%;
  }
  .x\:min-w-\(--button-width\) {
    min-width: var(--button-width);
  }
  .x\:min-w-0 {
    min-width: calc(var(--x-spacing) * 0);
  }
  .x\:min-w-6 {
    min-width: calc(var(--x-spacing) * 6);
  }
  .x\:shrink-0 {
    flex-shrink: 0;
  }
  .x\:grow {
    flex-grow: 1;
  }
  .x\:origin-center {
    transform-origin: center;
  }
  .x\:origin-top {
    transform-origin: top;
  }
  .x\:-rotate-90 {
    rotate: calc(90deg * -1);
  }
  .x\:\[transform\:translate3d\(0\,-100\%\,0\)\] {
    transform: translate3d(0,-100%,0);
  }
  .x\:\[transform\:translate3d\(0\,0\,0\)\] {
    transform: translate3d(0,0,0);
  }
  .x\:transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .x\:animate-spin {
    animation: var(--x-animate-spin);
  }
  .x\:cursor-pointer {
    cursor: pointer;
  }
  .x\:scroll-m-12 {
    scroll-margin: calc(var(--x-spacing) * 12);
  }
  .x\:scroll-my-6 {
    scroll-margin-block: calc(var(--x-spacing) * 6);
  }
  .x\:scroll-py-6 {
    scroll-padding-block: calc(var(--x-spacing) * 6);
  }
  .x\:list-decimal {
    list-style-type: decimal;
  }
  .x\:list-disc {
    list-style-type: disc;
  }
  .x\:grid-rows-\[min-content_1fr_min-content\] {
    grid-template-rows: min-content 1fr min-content;
  }
  .x\:flex-col {
    flex-direction: column;
  }
  .x\:flex-wrap {
    flex-wrap: wrap;
  }
  .x\:items-center {
    align-items: center;
  }
  .x\:items-start {
    align-items: flex-start;
  }
  .x\:justify-between {
    justify-content: space-between;
  }
  .x\:justify-center {
    justify-content: center;
  }
  .x\:justify-end {
    justify-content: flex-end;
  }
  .x\:justify-start {
    justify-content: flex-start;
  }
  .x\:gap-1 {
    gap: calc(var(--x-spacing) * 1);
  }
  .x\:gap-1\.5 {
    gap: calc(var(--x-spacing) * 1.5);
  }
  .x\:gap-2 {
    gap: calc(var(--x-spacing) * 2);
  }
  .x\:gap-3 {
    gap: calc(var(--x-spacing) * 3);
  }
  .x\:gap-4 {
    gap: calc(var(--x-spacing) * 4);
  }
  .x\:self-stretch {
    align-self: stretch;
  }
  .x\:truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .x\:overflow-hidden {
    overflow: hidden;
  }
  .x\:overflow-x-auto {
    overflow-x: auto;
  }
  .x\:overflow-y-auto {
    overflow-y: auto;
  }
  .x\:overflow-y-hidden {
    overflow-y: hidden;
  }
  .x\:overscroll-contain {
    overscroll-behavior: contain;
  }
  .x\:overscroll-x-contain {
    overscroll-behavior-x: contain;
  }
  .x\:overscroll-y-contain {
    overscroll-behavior-y: contain;
  }
  .x\:rounded {
    border-radius: 0.25rem;
  }
  .x\:rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .x\:rounded-lg {
    border-radius: var(--x-radius-lg);
  }
  .x\:rounded-md {
    border-radius: var(--x-radius-md);
  }
  .x\:rounded-sm {
    border-radius: var(--x-radius-sm);
  }
  .x\:rounded-xl {
    border-radius: var(--x-radius-xl);
  }
  .x\:rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .x\:rounded-t-md {
    border-top-left-radius: var(--x-radius-md);
    border-top-right-radius: var(--x-radius-md);
  }
  .x\:rounded-b-md {
    border-bottom-right-radius: var(--x-radius-md);
    border-bottom-left-radius: var(--x-radius-md);
  }
  .x\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .x\:border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .x\:border-s-2 {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 2px;
  }
  .x\:border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .x\:border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .x\:border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .x\:border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .x\:border-black\/5 {
    border-color: color-mix(in oklab, var(--x-color-black) 5%, transparent);
  }
  .x\:border-black\/10 {
    border-color: color-mix(in oklab, var(--x-color-black) 10%, transparent);
  }
  .x\:border-blue-200 {
    border-color: var(--x-color-blue-200);
  }
  .x\:border-current {
    border-color: currentColor;
  }
  .x\:border-gray-200 {
    border-color: var(--x-color-gray-200);
  }
  .x\:border-gray-300 {
    border-color: var(--x-color-gray-300);
  }
  .x\:border-orange-100 {
    border-color: var(--x-color-orange-100);
  }
  .x\:border-red-200 {
    border-color: var(--x-color-red-200);
  }
  .x\:border-transparent {
    border-color: transparent;
  }
  .x\:border-yellow-100 {
    border-color: var(--x-color-yellow-100);
  }
  .x\:bg-black\/\[\.05\] {
    background-color: color-mix(in oklab, var(--x-color-black) 5%, transparent);
  }
  .x\:bg-blue-100 {
    background-color: var(--x-color-blue-100);
  }
  .x\:bg-gray-100 {
    background-color: var(--x-color-gray-100);
  }
  .x\:bg-gray-200 {
    background-color: var(--x-color-gray-200);
  }
  .x\:bg-gray-400\/20 {
    background-color: color-mix(in oklab, var(--x-color-gray-400) 20%, transparent);
  }
  .x\:bg-neutral-900 {
    background-color: var(--x-color-neutral-900);
  }
  .x\:bg-nextra-bg {
    background-color: var(--x-color-nextra-bg);
  }
  .x\:bg-nextra-bg\/70 {
    background-color: color-mix(in oklab, var(--x-color-nextra-bg) 70%, transparent);
  }
  .x\:bg-orange-50 {
    background-color: var(--x-color-orange-50);
  }
  .x\:bg-primary-50 {
    background-color: var(--x-color-primary-50);
  }
  .x\:bg-primary-100 {
    background-color: var(--x-color-primary-100);
  }
  .x\:bg-primary-500\/10 {
    background-color: color-mix(in oklab, var(--x-color-primary-500) 10%, transparent);
  }
  .x\:bg-red-100 {
    background-color: var(--x-color-red-100);
  }
  .x\:bg-transparent {
    background-color: transparent;
  }
  .x\:bg-white {
    background-color: var(--x-color-white);
  }
  .x\:bg-yellow-50 {
    background-color: var(--x-color-yellow-50);
  }
  .x\:p-0 {
    padding: calc(var(--x-spacing) * 0);
  }
  .x\:p-0\.5 {
    padding: calc(var(--x-spacing) * 0.5);
  }
  .x\:p-1 {
    padding: calc(var(--x-spacing) * 1);
  }
  .x\:p-1\.5 {
    padding: calc(var(--x-spacing) * 1.5);
  }
  .x\:p-2 {
    padding: calc(var(--x-spacing) * 2);
  }
  .x\:p-4 {
    padding: calc(var(--x-spacing) * 4);
  }
  .x\:px-1\.5 {
    padding-inline: calc(var(--x-spacing) * 1.5);
  }
  .x\:px-2 {
    padding-inline: calc(var(--x-spacing) * 2);
  }
  .x\:px-2\.5 {
    padding-inline: calc(var(--x-spacing) * 2.5);
  }
  .x\:px-3 {
    padding-inline: calc(var(--x-spacing) * 3);
  }
  .x\:px-4 {
    padding-inline: calc(var(--x-spacing) * 4);
  }
  .x\:px-8 {
    padding-inline: calc(var(--x-spacing) * 8);
  }
  .x\:py-1 {
    padding-block: calc(var(--x-spacing) * 1);
  }
  .x\:py-1\.5 {
    padding-block: calc(var(--x-spacing) * 1.5);
  }
  .x\:py-2 {
    padding-block: calc(var(--x-spacing) * 2);
  }
  .x\:py-2\.5 {
    padding-block: calc(var(--x-spacing) * 2.5);
  }
  .x\:py-3 {
    padding-block: calc(var(--x-spacing) * 3);
  }
  .x\:py-4 {
    padding-block: calc(var(--x-spacing) * 4);
  }
  .x\:py-12 {
    padding-block: calc(var(--x-spacing) * 12);
  }
  .x\:ps-3 {
    padding-inline-start: calc(var(--x-spacing) * 3);
  }
  .x\:ps-4 {
    padding-inline-start: calc(var(--x-spacing) * 4);
  }
  .x\:ps-6 {
    padding-inline-start: calc(var(--x-spacing) * 6);
  }
  .x\:pe-2 {
    padding-inline-end: calc(var(--x-spacing) * 2);
  }
  .x\:pe-4 {
    padding-inline-end: calc(var(--x-spacing) * 4);
  }
  .x\:pe-9 {
    padding-inline-end: calc(var(--x-spacing) * 9);
  }
  .x\:pt-\(--nextra-navbar-height\) {
    padding-top: var(--nextra-navbar-height);
  }
  .x\:pt-1 {
    padding-top: calc(var(--x-spacing) * 1);
  }
  .x\:pt-4 {
    padding-top: calc(var(--x-spacing) * 4);
  }
  .x\:pt-6 {
    padding-top: calc(var(--x-spacing) * 6);
  }
  .x\:pt-8 {
    padding-top: calc(var(--x-spacing) * 8);
  }
  .x\:pr-\[max\(env\(safe-area-inset-right\)\,1\.5rem\)\] {
    padding-right: max(env(safe-area-inset-right), 1.5rem);
  }
  .x\:pb-1 {
    padding-bottom: calc(var(--x-spacing) * 1);
  }
  .x\:pb-1\.5 {
    padding-bottom: calc(var(--x-spacing) * 1.5);
  }
  .x\:pb-8 {
    padding-bottom: calc(var(--x-spacing) * 8);
  }
  .x\:pb-\[env\(safe-area-inset-bottom\)\] {
    padding-bottom: env(safe-area-inset-bottom);
  }
  .x\:pb-px {
    padding-bottom: 1px;
  }
  .x\:pl-\[max\(env\(safe-area-inset-left\)\,1\.5rem\)\] {
    padding-left: max(env(safe-area-inset-left), 1.5rem);
  }
  .x\:text-center {
    text-align: center;
  }
  .x\:text-end {
    text-align: end;
  }
  .x\:text-start {
    text-align: start;
  }
  .x\:align-baseline {
    vertical-align: baseline;
  }
  .x\:font-mono {
    font-family: var(--x-font-mono);
  }
  .x\:text-2xl {
    font-size: var(--x-text-2xl);
    line-height: var(--tw-leading, var(--x-text-2xl--line-height));
  }
  .x\:text-3xl {
    font-size: var(--x-text-3xl);
    line-height: var(--tw-leading, var(--x-text-3xl--line-height));
  }
  .x\:text-4xl {
    font-size: var(--x-text-4xl);
    line-height: var(--tw-leading, var(--x-text-4xl--line-height));
  }
  .x\:text-base {
    font-size: var(--x-text-base);
    line-height: var(--tw-leading, var(--x-text-base--line-height));
  }
  .x\:text-lg {
    font-size: var(--x-text-lg);
    line-height: var(--tw-leading, var(--x-text-lg--line-height));
  }
  .x\:text-sm {
    font-size: var(--x-text-sm);
    line-height: var(--tw-leading, var(--x-text-sm--line-height));
  }
  .x\:text-xl {
    font-size: var(--x-text-xl);
    line-height: var(--tw-leading, var(--x-text-xl--line-height));
  }
  .x\:text-xs {
    font-size: var(--x-text-xs);
    line-height: var(--tw-leading, var(--x-text-xs--line-height));
  }
  .x\:text-\[\.9em\] {
    font-size: .9em;
  }
  .x\:text-\[11px\] {
    font-size: 11px;
  }
  .x\:leading-5 {
    --tw-leading: calc(var(--x-spacing) * 5);
    line-height: calc(var(--x-spacing) * 5);
  }
  .x\:leading-7 {
    --tw-leading: calc(var(--x-spacing) * 7);
    line-height: calc(var(--x-spacing) * 7);
  }
  .x\:leading-\[1\.35rem\] {
    --tw-leading: 1.35rem;
    line-height: 1.35rem;
  }
  .x\:leading-tight {
    --tw-leading: var(--x-leading-tight);
    line-height: var(--x-leading-tight);
  }
  .x\:font-bold {
    --tw-font-weight: var(--x-font-weight-bold);
    font-weight: var(--x-font-weight-bold);
  }
  .x\:font-medium {
    --tw-font-weight: var(--x-font-weight-medium);
    font-weight: var(--x-font-weight-medium);
  }
  .x\:font-semibold {
    --tw-font-weight: var(--x-font-weight-semibold);
    font-weight: var(--x-font-weight-semibold);
  }
  .x\:tracking-tight {
    --tw-tracking: var(--x-tracking-tight);
    letter-spacing: var(--x-tracking-tight);
  }
  .x\:break-words {
    overflow-wrap: break-word;
  }
  .x\:\[word-break\:break-word\] {
    word-break: break-word;
  }
  .x\:break-all {
    word-break: break-all;
  }
  .x\:text-ellipsis {
    text-overflow: ellipsis;
  }
  .x\:hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .x\:whitespace-nowrap {
    white-space: nowrap;
  }
  .x\:whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .x\:text-black {
    color: var(--x-color-black);
  }
  .x\:text-blue-900 {
    color: var(--x-color-blue-900);
  }
  .x\:text-current {
    color: currentColor;
  }
  .x\:text-gray-100 {
    color: var(--x-color-gray-100);
  }
  .x\:text-gray-400 {
    color: var(--x-color-gray-400);
  }
  .x\:text-gray-500 {
    color: var(--x-color-gray-500);
  }
  .x\:text-gray-600 {
    color: var(--x-color-gray-600);
  }
  .x\:text-gray-700 {
    color: var(--x-color-gray-700);
  }
  .x\:text-gray-800 {
    color: var(--x-color-gray-800);
  }
  .x\:text-gray-900 {
    color: var(--x-color-gray-900);
  }
  .x\:text-orange-800 {
    color: var(--x-color-orange-800);
  }
  .x\:text-primary-600 {
    color: var(--x-color-primary-600);
  }
  .x\:text-primary-800 {
    color: var(--x-color-primary-800);
  }
  .x\:text-red-500 {
    color: var(--x-color-red-500);
  }
  .x\:text-red-900 {
    color: var(--x-color-red-900);
  }
  .x\:text-slate-50 {
    color: var(--x-color-slate-50);
  }
  .x\:text-slate-700 {
    color: var(--x-color-slate-700);
  }
  .x\:text-slate-900 {
    color: var(--x-color-slate-900);
  }
  .x\:text-yellow-900 {
    color: var(--x-color-yellow-900);
  }
  .x\:uppercase {
    text-transform: uppercase;
  }
  .x\:italic {
    font-style: italic;
  }
  .x\:no-underline {
    text-decoration-line: none;
  }
  .x\:underline {
    text-decoration-line: underline;
  }
  .x\:decoration-from-font {
    text-decoration-thickness: from-font;
  }
  .x\:subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
  .x\:opacity-0 {
    opacity: 0%;
  }
  .x\:opacity-25 {
    opacity: 25%;
  }
  .x\:opacity-60 {
    opacity: 60%;
  }
  .x\:opacity-75 {
    opacity: 75%;
  }
  .x\:opacity-80 {
    opacity: 80%;
  }
  .x\:opacity-100 {
    opacity: 100%;
  }
  .x\:shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:nextra-focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--x-color-primary-200);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--x-color-primary-300);
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:where(.dark *) {
      --tw-ring-color: var(--x-color-primary-800);
    }
    &:where(.dark *) {
      --tw-ring-offset-color: var(--x-color-primary-700);
    }
  }
  .x\:ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-gray-100 {
    --tw-shadow-color: var(--x-color-gray-100);
  }
  .x\:ring-gray-300 {
    --tw-ring-color: var(--x-color-gray-300);
  }
  .x\:backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--x-blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .x\:transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .x\:ease-in-out {
    --tw-ease: var(--x-ease-in-out);
    transition-timing-function: var(--x-ease-in-out);
  }
  .x\:ease-out {
    --tw-ease: var(--x-ease-out);
    transition-timing-function: var(--x-ease-out);
  }
  .x\:\[contain\:layout_style\] {
    contain: layout style;
  }
  .x\:outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .x\:select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .x\:\[text-underline-position\:from-font\] {
    text-underline-position: from-font;
  }
  .x\:ring-inset {
    --tw-ring-inset: inset;
  }
  .x\:\*\:origin-center {
    :is(& > *) {
      transform-origin: center;
    }
  }
  .x\:\*\:rotate-90 {
    :is(& > *) {
      rotate: 90deg;
    }
  }
  .x\:\*\:animate-\[fade-in2_1s_ease_\.2s_forwards\] {
    :is(& > *) {
      animation: fade-in2 1s ease .2s forwards;
    }
  }
  .x\:\*\:animate-\[fade-in_1s_ease_\.2s_forwards\] {
    :is(& > *) {
      animation: fade-in 1s ease .2s forwards;
    }
  }
  .x\:\*\:pt-2 {
    :is(& > *) {
      padding-top: calc(var(--x-spacing) * 2);
    }
  }
  .x\:\*\:opacity-0 {
    :is(& > *) {
      opacity: 0%;
    }
  }
  .x\:\*\:transition-transform {
    :is(& > *) {
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    }
  }
  .x\:not-first\:mt-4 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 4);
    }
  }
  .x\:not-first\:mt-5 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 5);
    }
  }
  .x\:not-first\:mt-6 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 6);
    }
  }
  .x\:group-hover\:opacity-100 {
    &:is(:where(.x\:group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .x\:group-focus\:opacity-100 {
    &:is(:where(.x\:group):focus *) {
      opacity: 100%;
    }
  }
  .x\:placeholder\:text-gray-500 {
    &::placeholder {
      color: var(--x-color-gray-500);
    }
  }
  .x\:before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .x\:before\:inset-y-1 {
    &::before {
      content: var(--tw-content);
      inset-block: calc(var(--x-spacing) * 1);
    }
  }
  .x\:before\:start-0 {
    &::before {
      content: var(--tw-content);
      inset-inline-start: calc(var(--x-spacing) * 0);
    }
  }
  .x\:before\:w-px {
    &::before {
      content: var(--tw-content);
      width: 1px;
    }
  }
  .x\:before\:bg-gray-200 {
    &::before {
      content: var(--tw-content);
      background-color: var(--x-color-gray-200);
    }
  }
  .x\:before\:opacity-25 {
    &::before {
      content: var(--tw-content);
      opacity: 25%;
    }
  }
  .x\:before\:content-\[\"\"\] {
    &::before {
      content: var(--tw-content);
      --tw-content: "";
      content: var(--tw-content);
    }
  }
  .x\:before\:content-\[\"\#\"\] {
    &::before {
      content: var(--tw-content);
      --tw-content: "#";
      content: var(--tw-content);
    }
  }
  .x\:after\:transition-transform {
    &::after {
      content: var(--tw-content);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    }
  }
  .x\:after\:duration-75 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 75ms;
      transition-duration: 75ms;
    }
  }
  .x\:after\:content-\[\"→\"\] {
    &::after {
      content: var(--tw-content);
      --tw-content: "→";
      content: var(--tw-content);
    }
  }
  .x\:group-hover\:after\:translate-x-0\.5 {
    &:is(:where(.x\:group):hover *) {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          --tw-translate-x: calc(var(--x-spacing) * 0.5);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .x\:group-focus\:after\:translate-x-0\.5 {
    &:is(:where(.x\:group):focus *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--x-spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .x\:\*\:first\:origin-\[35\%\] {
    :is(& > *) {
      &:first-child {
        transform-origin: 35%;
      }
    }
  }
  .x\:\*\:first\:rotate-180 {
    :is(& > *) {
      &:first-child {
        rotate: 180deg;
      }
    }
  }
  .x\:even\:bg-gray-100 {
    &:nth-child(even) {
      background-color: var(--x-color-gray-100);
    }
  }
  .x\:target\:animate-\[fade-in_1\.5s\] {
    &:target {
      animation: fade-in 1.5s;
    }
  }
  .x\:empty\:invisible {
    &:empty {
      visibility: hidden;
    }
  }
  .x\:focus-within\:opacity-100 {
    &:focus-within {
      opacity: 100%;
    }
  }
  .x\:hover\:border-gray-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--x-color-gray-300);
      }
    }
  }
  .x\:hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--x-color-gray-100);
      }
    }
  }
  .x\:hover\:bg-gray-800\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in oklab, var(--x-color-gray-800) 5%, transparent);
      }
    }
  }
  .x\:hover\:bg-slate-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--x-color-slate-50);
      }
    }
  }
  .x\:hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--x-color-gray-800);
      }
    }
  }
  .x\:hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--x-color-gray-900);
      }
    }
  }
  .x\:hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .x\:hover\:opacity-75 {
    &:hover {
      @media (hover: hover) {
        opacity: 75%;
      }
    }
  }
  .x\:hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .x\:hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .x\:hover\:shadow-gray-100 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: var(--x-color-gray-100);
      }
    }
  }
  .x\:focus-visible\:nextra-focus {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--x-color-primary-200);
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-offset-color: var(--x-color-primary-300);
      &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
      &:where(.dark *) {
        --tw-ring-color: var(--x-color-primary-800);
      }
      &:where(.dark *) {
        --tw-ring-offset-color: var(--x-color-primary-700);
      }
    }
  }
  .x\:active\:shadow-sm {
    &:active {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .x\:active\:shadow-gray-200 {
    &:active {
      --tw-shadow-color: var(--x-color-gray-200);
    }
  }
  .x\:aria-\[current\]\:font-medium {
    &[aria-current] {
      --tw-font-weight: var(--x-font-weight-medium);
      font-weight: var(--x-font-weight-medium);
    }
  }
  .x\:aria-\[current\]\:text-current {
    &[aria-current] {
      color: currentColor;
    }
  }
  .x\:aria-\[current\]\:subpixel-antialiased {
    &[aria-current] {
      -webkit-font-smoothing: auto;
      -moz-osx-font-smoothing: auto;
    }
  }
  .x\:data-closed\:scale-95 {
    &[data-closed] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .x\:data-closed\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .x\:motion-reduce\:transition-none {
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
  }
  .x\:contrast-more\:border {
    @media (prefers-contrast: more) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .x\:contrast-more\:border-current {
    @media (prefers-contrast: more) {
      border-color: currentColor;
    }
  }
  .x\:contrast-more\:border-current\! {
    @media (prefers-contrast: more) {
      border-color: currentColor !important;
    }
  }
  .x\:contrast-more\:border-gray-600 {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-gray-600);
    }
  }
  .x\:contrast-more\:border-gray-900 {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:border-primary-500\! {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-primary-500) !important;
    }
  }
  .x\:contrast-more\:border-transparent {
    @media (prefers-contrast: more) {
      border-color: transparent;
    }
  }
  .x\:contrast-more\:text-current {
    @media (prefers-contrast: more) {
      color: currentColor;
    }
  }
  .x\:contrast-more\:text-gray-700 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-700);
    }
  }
  .x\:contrast-more\:text-gray-800 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-800);
    }
  }
  .x\:contrast-more\:text-gray-900 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:text-primary-600\! {
    @media (prefers-contrast: more) {
      color: var(--x-color-primary-600) !important;
    }
  }
  .x\:contrast-more\:underline {
    @media (prefers-contrast: more) {
      text-decoration-line: underline;
    }
  }
  .x\:contrast-more\:ring-gray-900 {
    @media (prefers-contrast: more) {
      --tw-ring-color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:contrast-150 {
    @media (prefers-contrast: more) {
      --tw-contrast: contrast(150%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .x\:contrast-more\:hover\:border-gray-900 {
    @media (prefers-contrast: more) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-gray-900);
        }
      }
    }
  }
  .x\:max-xl\:hidden {
    @media (width < 80rem) {
      display: none;
    }
  }
  .x\:max-md\:sticky {
    @media (width < 48rem) {
      position: sticky;
    }
  }
  .x\:max-md\:me-auto {
    @media (width < 48rem) {
      margin-inline-end: auto;
    }
  }
  .x\:max-md\:hidden {
    @media (width < 48rem) {
      display: none;
    }
  }
  .x\:max-md\:h-full {
    @media (width < 48rem) {
      height: 100%;
    }
  }
  .x\:max-md\:overflow-hidden {
    @media (width < 48rem) {
      overflow: hidden;
    }
  }
  .x\:max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .x\:md\:-mx-8 {
    @media (width >= 48rem) {
      margin-inline: calc(var(--x-spacing) * -8);
    }
  }
  .x\:md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .x\:md\:max-h-\[min\(calc\(100vh-5rem\)\,400px\)\]\! {
    @media (width >= 48rem) {
      max-height: min(calc(100vh - 5rem), 400px) !important;
    }
  }
  .x\:md\:min-h-28 {
    @media (width >= 48rem) {
      min-height: calc(var(--x-spacing) * 28);
    }
  }
  .x\:md\:w-64 {
    @media (width >= 48rem) {
      width: calc(var(--x-spacing) * 64);
    }
  }
  .x\:md\:w-\[576px\] {
    @media (width >= 48rem) {
      width: 576px;
    }
  }
  .x\:md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .x\:md\:px-12 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--x-spacing) * 12);
    }
  }
  .x\:md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--x-text-lg);
      line-height: var(--tw-leading, var(--x-text-lg--line-height));
    }
  }
  .x\:md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--x-text-sm);
      line-height: var(--tw-leading, var(--x-text-sm--line-height));
    }
  }
  .x\:xl\:ms-\[calc\(50\%-50vw\+16rem\)\] {
    @media (width >= 80rem) {
      margin-inline-start: calc(50% - 50vw + 16rem);
    }
  }
  .x\:xl\:me-\[calc\(50\%-50vw\)\] {
    @media (width >= 80rem) {
      margin-inline-end: calc(50% - 50vw);
    }
  }
  .x\:2xl\:-mx-24 {
    @media (width >= 96rem) {
      margin-inline: calc(var(--x-spacing) * -24);
    }
  }
  .x\:ltr\:rotate-90 {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
      rotate: 90deg;
    }
  }
  .x\:ltr\:rotate-180 {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
      rotate: 180deg;
    }
  }
  .x\:rtl\:-rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: calc(180deg * -1);
    }
  }
  .x\:rtl\:-rotate-270 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: calc(270deg * -1);
    }
  }
  .x\:rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .x\:dark\:border-blue-200\/30 {
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-blue-200) 30%, transparent);
    }
  }
  .x\:dark\:border-gray-600 {
    &:where(.dark *) {
      border-color: var(--x-color-gray-600);
    }
  }
  .x\:dark\:border-gray-700 {
    &:where(.dark *) {
      border-color: var(--x-color-gray-700);
    }
  }
  .x\:dark\:border-neutral-700 {
    &:where(.dark *) {
      border-color: var(--x-color-neutral-700);
    }
  }
  .x\:dark\:border-neutral-800 {
    &:where(.dark *) {
      border-color: var(--x-color-neutral-800);
    }
  }
  .x\:dark\:border-orange-400\/30 {
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-orange-400) 30%, transparent);
    }
  }
  .x\:dark\:border-red-200\/30 {
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-red-200) 30%, transparent);
    }
  }
  .x\:dark\:border-white\/20 {
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-white) 20%, transparent);
    }
  }
  .x\:dark\:border-yellow-200\/30 {
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-yellow-200) 30%, transparent);
    }
  }
  .x\:dark\:bg-black {
    &:where(.dark *) {
      background-color: var(--x-color-black);
    }
  }
  .x\:dark\:bg-blue-900\/30 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-blue-900) 30%, transparent);
    }
  }
  .x\:dark\:bg-gray-50\/10 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-gray-50) 10%, transparent);
    }
  }
  .x\:dark\:bg-neutral-800 {
    &:where(.dark *) {
      background-color: var(--x-color-neutral-800);
    }
  }
  .x\:dark\:bg-neutral-900 {
    &:where(.dark *) {
      background-color: var(--x-color-neutral-900);
    }
  }
  .x\:dark\:bg-orange-400\/20 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-orange-400) 20%, transparent);
    }
  }
  .x\:dark\:bg-primary-100\/5 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-primary-100) 5%, transparent);
    }
  }
  .x\:dark\:bg-primary-100\/10 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-primary-100) 10%, transparent);
    }
  }
  .x\:dark\:bg-primary-400\/10 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-primary-400) 10%, transparent);
    }
  }
  .x\:dark\:bg-primary-500\/10 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-primary-500) 10%, transparent);
    }
  }
  .x\:dark\:bg-red-900\/30 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-red-900) 30%, transparent);
    }
  }
  .x\:dark\:bg-yellow-700\/30 {
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-yellow-700) 30%, transparent);
    }
  }
  .x\:dark\:bg-\[linear-gradient\(1deg\,\#383838\,\#212121\)\] {
    &:where(.dark *) {
      background-image: linear-gradient(1deg,#383838,#212121);
    }
  }
  .x\:dark\:text-blue-200 {
    &:where(.dark *) {
      color: var(--x-color-blue-200);
    }
  }
  .x\:dark\:text-gray-50 {
    &:where(.dark *) {
      color: var(--x-color-gray-50);
    }
  }
  .x\:dark\:text-gray-100 {
    &:where(.dark *) {
      color: var(--x-color-gray-100);
    }
  }
  .x\:dark\:text-gray-200 {
    &:where(.dark *) {
      color: var(--x-color-gray-200);
    }
  }
  .x\:dark\:text-gray-300 {
    &:where(.dark *) {
      color: var(--x-color-gray-300);
    }
  }
  .x\:dark\:text-gray-400 {
    &:where(.dark *) {
      color: var(--x-color-gray-400);
    }
  }
  .x\:dark\:text-neutral-200 {
    &:where(.dark *) {
      color: var(--x-color-neutral-200);
    }
  }
  .x\:dark\:text-neutral-400 {
    &:where(.dark *) {
      color: var(--x-color-neutral-400);
    }
  }
  .x\:dark\:text-neutral-600 {
    &:where(.dark *) {
      color: var(--x-color-neutral-600);
    }
  }
  .x\:dark\:text-orange-300 {
    &:where(.dark *) {
      color: var(--x-color-orange-300);
    }
  }
  .x\:dark\:text-primary-600 {
    &:where(.dark *) {
      color: var(--x-color-primary-600);
    }
  }
  .x\:dark\:text-red-200 {
    &:where(.dark *) {
      color: var(--x-color-red-200);
    }
  }
  .x\:dark\:text-slate-100 {
    &:where(.dark *) {
      color: var(--x-color-slate-100);
    }
  }
  .x\:dark\:text-slate-200 {
    &:where(.dark *) {
      color: var(--x-color-slate-200);
    }
  }
  .x\:dark\:text-white {
    &:where(.dark *) {
      color: var(--x-color-white);
    }
  }
  .x\:dark\:text-yellow-200 {
    &:where(.dark *) {
      color: var(--x-color-yellow-200);
    }
  }
  .x\:dark\:shadow-none {
    &:where(.dark *) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .x\:dark\:ring-neutral-700 {
    &:where(.dark *) {
      --tw-ring-color: var(--x-color-neutral-700);
    }
  }
  .x\:dark\:placeholder\:text-gray-400 {
    &:where(.dark *) {
      &::placeholder {
        color: var(--x-color-gray-400);
      }
    }
  }
  .x\:dark\:before\:bg-neutral-800 {
    &:where(.dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--x-color-neutral-800);
      }
    }
  }
  .x\:even\:dark\:bg-gray-600\/20 {
    &:nth-child(even) {
      &:where(.dark *) {
        background-color: color-mix(in oklab, var(--x-color-gray-600) 20%, transparent);
      }
    }
  }
  .x\:dark\:hover\:border-neutral-500 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-neutral-500);
        }
      }
    }
  }
  .x\:dark\:hover\:border-neutral-700 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-neutral-700);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-gray-100\/5 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--x-color-gray-100) 5%, transparent);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-700 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-700);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-800 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-800);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-900 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-900);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-primary-100\/5 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in oklab, var(--x-color-primary-100) 5%, transparent);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-50 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-50);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-100 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-100);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-200 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-200);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-300 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-300);
        }
      }
    }
  }
  .x\:dark\:hover\:text-neutral-50 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-neutral-50);
        }
      }
    }
  }
  .x\:dark\:hover\:shadow-none {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 0 0 #0000;
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .x\:contrast-more\:dark\:border-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        border-color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-100 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-100);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-300 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-300);
      }
    }
  }
  .x\:contrast-more\:dark\:ring-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        --tw-ring-color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:hover\:border-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--x-color-gray-50);
          }
        }
      }
    }
  }
  .x\:print\:\[display\:none\] {
    @media print {
      display: none;
    }
  }
  .x\:print\:hidden {
    @media print {
      display: none;
    }
  }
  .x\:print\:bg-transparent {
    @media print {
      background-color: transparent;
    }
  }
  .x\:\[\&_mark\]\:bg-primary-600\/80 {
    & mark {
      background-color: color-mix(in oklab, var(--x-color-primary-600) 80%, transparent);
    }
  }
  .x\:\[\&_mark\]\:text-white {
    & mark {
      color: var(--x-color-white);
    }
  }
  .x\:\[\&_svg\]\:text-red-500 {
    & svg {
      color: var(--x-color-red-500);
    }
  }
  .x\:\[\&\:\:-webkit-details-marker\]\:hidden {
    &::-webkit-details-marker {
      display: none;
    }
  }
  .x\:\[\&\:\:-webkit-search-cancel-button\]\:appearance-none {
    &::-webkit-search-cancel-button {
      appearance: none;
    }
  }
  .x\:\[\.nextra-banner\:not\(\[class\$\=hidden\]\)\~\&\]\:pt-\[calc\(var\(--nextra-banner-height\)\+var\(--nextra-navbar-height\)\)\] {
    .nextra-banner:not([class$=hidden])~& {
      padding-top: calc(var(--nextra-banner-height) + var(--nextra-navbar-height));
    }
  }
  .x\:max-md\:\[\.nextra-banner\:not\(\[class\$\=hidden\]\)\~\&\]\:top-\(--nextra-banner-height\) {
    @media (width < 48rem) {
      .nextra-banner:not([class$=hidden])~& {
        top: var(--nextra-banner-height);
      }
    }
  }
  .x\:\[\:is\(ol\,ul\)_\&\]\:my-3 {
    :is(ol,ul) & {
      margin-block: calc(var(--x-spacing) * 3);
    }
  }
  .x\:\[\[data-expanded\]\>summary\:first-child\>\&\]\:rotate-90 {
    [data-expanded]>summary:first-child>& {
      rotate: 90deg;
    }
  }
  .x\:hover\:\[summary\:has\(\&\)\]\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        summary:has(&) {
          background-color: transparent;
        }
      }
    }
  }
}
.nextra-code span {
  background-color: var(--shiki-light-bg);
  color: var(--shiki-light);
  &:where(.dark *) {
    background-color: var(--shiki-dark-bg);
  }
  &:where(.dark *) {
    color: var(--shiki-dark);
  }
}
code.nextra-code {
  box-decoration-break: slice;
  font-feature-settings: 'rlig' 1, 'calt' 1, 'ss01' 1;
  font-size: var(--x-text-sm);
  line-height: var(--tw-leading, var(--x-text-sm--line-height));
  :not(pre) > &:not([class*='twoslash-']) {
    border-radius: var(--x-radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in oklab, var(--x-color-black) 4%, transparent);
    background-color: color-mix(in oklab, var(--x-color-black) 3%, transparent);
    padding-inline: .25em;
    padding-block: calc(var(--x-spacing) * 0.5);
    font-size: .9em;
    overflow-wrap: break-word;
    &:where(.dark *) {
      border-color: color-mix(in oklab, var(--x-color-white) 10%, transparent);
    }
    &:where(.dark *) {
      background-color: color-mix(in oklab, var(--x-color-white) 10%, transparent);
    }
  }
}
pre code.nextra-code:not([class*='twoslash-']) {
  display: grid;
  counter-reset: line;
  &[data-line-numbers] > span {
    padding-left: calc(var(--x-spacing) * 2);
    &::before {
      counter-increment: line;
      content: counter(line);
      display: inline-block;
      min-width: 2.6rem;
      padding-right: calc(var(--x-spacing) * 4);
      text-align: right;
      color: var(--x-color-gray-500);
    }
  }
  & > span {
    padding-inline: calc(var(--x-spacing) * 4);
    &[data-highlighted-line] {
      background-color: color-mix(in oklab, var(--x-color-primary-600) 10%, transparent);
      color: color-mix(in oklab, var(--x-color-primary-600) 80%, transparent) !important;
      --tw-shadow: 2px 0 var(--tw-shadow-color, currentColor) inset;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      &:where(.dark *) {
        background-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
      }
    }
    [data-highlighted-chars] {
      border-radius: var(--x-radius-sm);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
      &:where(.dark *) {
        --tw-ring-color: color-mix(in oklab, var(--x-color-primary-600) 40%, transparent);
      }
      background-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
      &:where(.dark *) {
        background-color: color-mix(in oklab, var(--x-color-primary-600) 40%, transparent);
      }
    }
  }
  html[data-nextra-word-wrap] & {
    @media (width < 48rem) {
      white-space: pre-wrap;
    }
  }
}
.nextra-copy-icon {
  animation: fade-in 0.3s ease forwards;
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
:root {
  --twoslash-border-color: #8888;
  --twoslash-underline-color: currentColor;
  --twoslash-highlighted-border: 195, 125, 13;
  --twoslash-popup-bg: #f8f8f8;
  --twoslash-popup-color: inherit;
  --twoslash-popup-shadow: rgba(0, 0, 0.08) 0px 1px 4px;
  --twoslash-docs-color: #888;
  --twoslash-docs-font: sans-serif;
  --twoslash-matched-color: inherit;
  --twoslash-unmatched-color: #888;
  --twoslash-cursor-color: #8888;
  --twoslash-error-color: 212, 86, 86;
  --twoslash-error-bg: rgba(var(--twoslash-error-color), 0.13);
  --twoslash-tag-color: 55, 114, 207;
  --twoslash-tag-warn-color: 195, 125, 13;
  --twoslash-tag-annotate-color: 27, 166, 115;
}
.dark {
  --twoslash-popup-bg: #000;
  --twoslash-border-color: #404040;
}
@media (prefers-reduced-motion: reduce) {
  .twoslash * {
    transition: none !important;
  }
}
.twoslash:hover .twoslash-hover {
  border-color: var(--twoslash-underline-color);
}
.twoslash-hover {
  border-bottom: 1px dotted transparent;
  transition-timing-function: ease;
  transition: border-color 0.3s;
  position: relative;
}
.twoslash-popup-container {
  position: absolute;
  z-index: 10;
  margin-top: calc(var(--x-spacing) * 1.5);
  display: inline-flex;
  flex-direction: column;
  border-radius: 0.25rem;
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  --tw-duration: 300ms;
  transition-duration: 300ms;
  transform: translateY(1.1em);
  background: var(--twoslash-popup-bg) !important;
  color: var(--twoslash-popup-color);
  border: 1px solid var(--twoslash-border-color);
  text-align: left;
}
.twoslash-query-presisted .twoslash-popup-container {
  z-index: 9;
  transform: translateY(1.5em);
}
.twoslash-popup-arrow {
  position: absolute;
  top: calc(var(--x-spacing) * -1);
  width: calc(var(--x-spacing) * 1.5);
  height: calc(var(--x-spacing) * 1.5);
  rotate: calc(45deg * -1);
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
  border-color: var(--twoslash-border-color);
  background-color: var(--twoslash-popup-bg);
  left: 1em;
  pointer-events: none;
}
.twoslash-popup-code, .twoslash-popup-docs {
  padding: 6px 8px;
}
.twoslash-popup-docs {
  font-size: var(--x-text-sm);
  line-height: var(--tw-leading, var(--x-text-sm--line-height));
  color: var(--twoslash-docs-color);
  font-family: var(--twoslash-docs-font);
  border-top: 1px solid var(--twoslash-border-color);
}
.twoslash-popup-docs-tags {
  display: flex;
  flex-direction: column;
  font-family: var(--twoslash-docs-font);
}
.twoslash-popup-docs-tags, .twoslash-popup-docs-tag-name {
  margin-right: 0.5em;
}
.twoslash-error-line {
  position: relative;
  background-color: var(--twoslash-error-bg);
  border-left: 3px solid currentColor;
  color: rgb(var(--twoslash-error-color));
  padding: 6px 12px;
  margin: 0.2em 0;
}
.twoslash-error {
  background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23c94824'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") repeat-x bottom left;
  padding-bottom: 2px;
}
.twoslash-completion-cursor {
  position: relative;
}
.twoslash-completion-cursor .twoslash-completion-list {
  position: absolute;
  top: calc(var(--x-spacing) * 1);
  left: calc(var(--x-spacing) * 0);
  border-radius: 0.25rem;
  border-style: var(--tw-border-style);
  border-width: 1px;
  transform: translate(0, 1.2em);
  background: var(--twoslash-popup-bg);
  border-color: var(--twoslash-border-color);
}
.twoslash-completion-list {
  width: calc(var(--x-spacing) * 60);
  padding-inline: calc(var(--x-spacing) * 2);
  padding-block: calc(var(--x-spacing) * 1);
}
.twoslash-completion-list::before {
  background-color: var(--twoslash-cursor-color);
  width: 2px;
  position: absolute;
  top: -1.6em;
  height: 1.4em;
  left: -1px;
  content: ' ';
}
.twoslash-completion-list li {
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 0.25em;
  line-height: 1em;
}
.twoslash-completion-list li span.twoslash-completions-unmatched {
  color: var(--twoslash-unmatched-color);
}
.twoslash-completion-list .deprecated {
  text-decoration: line-through;
  opacity: 0.5;
}
.twoslash-completion-list li span.twoslash-completions-matched {
  color: var(--twoslash-matched-color);
}
.twoslash-highlighted {
  background-color: rgba(var(--twoslash-highlighted-border), 0.13);
  border: 1px solid rgba(var(--twoslash-highlighted-border), 0.31);
  padding: 1px 2px;
  margin: -1px -3px;
  border-radius: 4px;
}
.twoslash-completion-list .twoslash-completions-icon {
  color: var(--twoslash-unmatched-color);
  width: 1em;
  flex: none;
}
.twoslash-tag-line {
  position: relative;
  background-color: rgba(var(--twoslash-tag-color), 0.13);
  border-left: 3px solid currentColor;
  color: rgb(var(--twoslash-tag-color));
  padding: 6px 10px;
  margin: 0.2em 0;
  display: flex;
  align-items: center;
  gap: 0.3em;
}
.twoslash-tag-line .twoslash-tag-icon {
  width: 1.1em;
  color: inherit;
}
.twoslash-tag-line.twoslash-tag-error-line {
  background-color: var(--twoslash-error-bg);
  color: rgb(var(--twoslash-error-color));
}
.twoslash-tag-line.twoslash-tag-warn-line {
  background-color: rgba(var(--twoslash-tag-warn-color), 0.13);
  color: rgb(var(--twoslash-tag-warn-color));
}
.twoslash-tag-line.twoslash-tag-annotate-line {
  background-color: rgba(var(--twoslash-tag-annotate-color), 0.13);
  color: rgb(var(--twoslash-tag-annotate-color));
}
:hover > .subheading-anchor {
  opacity: 100%;
}
.subheading-anchor {
  margin-inline-start: calc(var(--x-spacing) * 1);
  opacity: 0%;
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  :target > &, &:focus {
    opacity: 100%;
  }
  :target > & {
    &::after {
      content: var(--tw-content);
      color: var(--x-color-gray-500);
    }
    &:where(.dark *) {
      &::after {
        content: var(--tw-content);
        color: var(--x-color-neutral-500);
      }
    }
  }
  &:after {
    padding-inline: calc(var(--x-spacing) * 1);
    --tw-content: '#';
    content: var(--tw-content);
  }
  &::after {
    content: var(--tw-content);
    color: var(--x-color-gray-400);
  }
  &:where(.dark *) {
    &::after {
      content: var(--tw-content);
      color: var(--x-color-neutral-600);
    }
  }
}
.nextra-scrollbar {
  scrollbar-width: thin;
  scrollbar-gutter: stable;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    display: none;
  }
}
.nextra-steps {
  h2, h3, h4, h5, h6 {
    counter-increment: var(--counter-id);
    margin-top: calc(var(--x-spacing) * 8);
    border-style: var(--tw-border-style);
    border-width: 0px;
    padding-bottom: calc(var(--x-spacing) * 0);
    font-size: var(--x-text-2xl);
    line-height: var(--tw-leading, var(--x-text-2xl--line-height));
    --tw-font-weight: var(--x-font-weight-semibold);
    font-weight: var(--x-font-weight-semibold);
    --tw-tracking: var(--x-tracking-tight);
    letter-spacing: var(--x-tracking-tight);
    &::before {
      content: var(--tw-content);
      background-color: var(--x-color-gray-100);
    }
    &:where(.dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--x-color-neutral-800);
      }
    }
    &:before {
      position: absolute;
      width: 33px;
      height: 33px;
      border-style: var(--tw-border-style);
      border-width: 4px;
      border-color: var(--x-color-nextra-bg);
      border-radius: calc(infinity * 1px);
      text-align: center;
      text-indent: -1px;
      font-size: var(--x-text-base);
      line-height: var(--tw-leading, var(--x-text-base--line-height));
      --tw-font-weight: var(--x-font-weight-normal);
      font-weight: var(--x-font-weight-normal);
      color: var(--x-color-neutral-400);
      margin-inline-start: -41px;
      content: counter(var(--counter-id));
    }
  }
}
.nextra-cards {
  grid-template-columns: repeat( auto-fill, minmax(max(250px, calc((100% - 1rem * 2) / var(--rows))), 1fr) );
}
.nextra-card {
  img {
    -webkit-user-select: none;
    user-select: none;
  }
  & > span > svg {
    height: auto;
    width: calc(var(--x-spacing) * 6);
    flex-shrink: 0;
    color: color-mix(in oklab, var(--x-color-black) 30%, transparent);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    &:where(.dark *) {
      color: color-mix(in oklab, var(--x-color-white) 40%, transparent);
    }
  }
  &:hover > span > svg {
    color: currentColor !important;
  }
  p {
    margin-top: calc(var(--x-spacing) * 2);
  }
}
[data-rmiz-ghost] {
  position: absolute;
  pointer-events: none;
}
[data-rmiz-btn-zoom], [data-rmiz-btn-unzoom] {
  width: calc(var(--x-spacing) * 10);
  height: calc(var(--x-spacing) * 10);
  border-radius: calc(infinity * 1px);
  background-color: color-mix(in oklab, var(--x-color-black) 70%, transparent);
  color: var(--x-color-white);
  &:where(.dark *) {
    background-color: color-mix(in oklab, var(--x-color-white) 70%, transparent);
  }
  &:where(.dark *) {
    color: var(--x-color-black);
  }
  outline-offset: 2px;
  padding: 9px;
  touch-action: manipulation;
  appearance: none;
}
[data-rmiz-btn-zoom] {
  position: absolute;
  inset: 10px 10px auto auto;
  cursor: zoom-in;
  &:not(:focus):not(:active) {
    position: absolute;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    pointer-events: none;
    white-space: nowrap;
    width: 1px;
  }
}
[data-rmiz-btn-unzoom] {
  position: absolute;
  inset: 20px 20px auto auto;
  cursor: zoom-out;
  z-index: 1;
}
[data-rmiz-content='found'] {
  img, svg, [role='img'], [data-zoom] {
    cursor: zoom-in;
  }
}
[data-rmiz-modal]::backdrop {
  display: none;
}
[data-rmiz-modal][open] {
  position: fixed;
  width: 100vw;
  width: 100dvw;
  height: 100vh;
  height: 100dvh;
  max-width: none;
  max-height: none;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  overflow: hidden;
}
[data-rmiz-modal-overlay] {
  position: absolute;
  inset: 0;
  transition: opacity 0.3s;
  background: rgba(var(--nextra-bg), 0.8);
}
[data-rmiz-modal-overlay='hidden'] {
  opacity: 0%;
}
[data-rmiz-modal-overlay='visible'] {
  opacity: 100%;
}
[data-rmiz-modal-content] {
  position: relative;
  width: 100%;
  height: 100%;
}
[data-rmiz-modal-img] {
  position: absolute;
  cursor: zoom-out;
  image-rendering: high-quality;
  transform-origin: top left;
  transition: transform 0.3s;
}
@media (prefers-reduced-motion: reduce) {
  [data-rmiz-modal-overlay], [data-rmiz-modal-img] {
    transition-duration: 0.01ms;
  }
}
.nextra-hamburger svg {
  g, path {
    @media (prefers-reduced-motion: reduce) {
      transition-property: none !important;
    }
  }
  --animation: transform 0.15s cubic-bezier(0.25, 1, 0.5, 1);
  g {
    transform-origin: center;
    transition: var(--animation);
  }
  path {
    opacity: 1;
    transition: var(--animation) 0.15s, opacity 0.15s ease 0.15s;
  }
  &.open {
    path {
      transition: var(--animation), opacity 0s ease 0.15s;
    }
    & > path {
      opacity: 0;
    }
    g {
      transition: var(--animation) 0.15s;
      &:nth-of-type(1) {
        transform: rotate(45deg);
        path {
          transform: translate3d(0, 6px, 0);
        }
      }
      &:nth-of-type(2) {
        transform: rotate(-45deg);
        path {
          transform: translate3d(0, -6px, 0);
        }
      }
    }
  }
}
article.nextra-body-typesetting-article {
  font-size: 17px;
  font-feature-settings: 'rlig' 1, 'calt' 1;
  h1 {
    margin-top: calc(var(--x-spacing) * 6);
    margin-bottom: calc(var(--x-spacing) * 4);
    text-align: center;
    font-size: 2.5rem;
  }
  h2 {
    --tw-border-style: none;
    border-style: none;
  }
  a {
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  p {
    --tw-leading: calc(var(--x-spacing) * 8);
    line-height: calc(var(--x-spacing) * 8);
  }
  code {
    --tw-border-style: none;
    border-style: none;
    &:where(.dark *) {
      background-color: var(--x-color-neutral-700);
    }
  }
  pre code {
    &:where(.dark *) {
      background-color: transparent;
    }
  }
  .subheading-anchor {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
}
html {
  --nextra-navbar-height: 64px;
  --nextra-menu-height: 3.75rem;
  font-size: var(--x-text-base);
  line-height: var(--tw-leading, var(--x-text-base--line-height));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'rlig' 1, 'calt' 1, 'ss01' 1;
  -webkit-tap-highlight-color: transparent;
  &:not(:has(*:focus)) {
    scroll-padding-top: var(--nextra-navbar-height);
  }
}
.contains-task-list {
  margin-top: calc(var(--x-spacing) * 6);
  input[type='checkbox'] {
    margin-inline-end: calc(var(--x-spacing) * 1);
  }
}
.footnotes a[data-footnote-backref] {
  font-family: initial;
}
@keyframes fade-in2 {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.nextra-border {
  border-color: var(--x-color-gray-200);
  @media (prefers-contrast: more) {
    border-color: var(--x-color-neutral-400) !important;
  }
  &:where(.dark *) {
    border-color: var(--x-color-neutral-800);
  }
}
.nextra-mask {
  mask-image: linear-gradient(to bottom, transparent, #000 20px, transparent 100%), linear-gradient(to top, transparent, #000 20px, transparent 100%);
  @media (prefers-contrast: more) {
    mask-image: none;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}


  !*** css ./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/font/google/target.css?{"path":"src/components/bodypageclass.tsx","import":"Inter","arguments":[{"subsets":["latin"],"variable":"--font-inter","display":"swap"}],"variableName":"inter"} ***!

/* cyrillic-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/55c55f0601d81cf3-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/26a46d62cd723877-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/97e0cb1ae144a2a9-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/581909926a08bbc8-s.woff2) format('woff2');
  unicode-range: U+0370-0377, U+037A-037F, U+0384-038A, U+038C, U+038E-03A1, U+03A3-03FF;
}
/* vietnamese */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/df0a9ae256c0569c-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/8e9860b6e62d6359-s.woff2) format('woff2');
  unicode-range: U+0100-02BA, U+02BD-02C5, U+02C7-02CC, U+02CE-02D7, U+02DD-02FF, U+0304, U+0308, U+0329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: 'Inter';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/e4af272ccee01ff0-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Inter Fallback';src: local("Arial");ascent-override: 90.44%;descent-override: 22.52%;line-gap-override: 0.00%;size-adjust: 107.12%
}.__className_e8ce0c {font-family: 'Inter', 'Inter Fallback';font-style: normal
}.__variable_e8ce0c {--font-inter: 'Inter', 'Inter Fallback'
}


  !*** css ./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[2].use[1]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[13].oneOf[2].use[2]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/font/google/target.css?{"path":"src/components/bodypageclass.tsx","import":"Homemade_Apple","arguments":[{"weight":"400","subsets":["latin"],"variable":"--font-homemade","display":"swap"}],"variableName":"homemade"} ***!

/* latin */
@font-face {
  font-family: 'Homemade Apple';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: url(/_next/static/media/64579aaceba9f83a-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: 'Homemade Apple Fallback';src: local("Arial");ascent-override: 104.33%;descent-override: 68.09%;line-gap-override: 1.42%;size-adjust: 124.21%
}.__className_047b89 {font-family: 'Homemade Apple', 'Homemade Apple Fallback';font-weight: 400;font-style: normal
}.__variable_047b89 {--font-homemade: 'Homemade Apple', 'Homemade Apple Fallback'
}

/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[2]!./node_modules/.pnpm/next@15.3.2_react-dom@19.1.0_react@19.1.0/node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[13].oneOf[10].use[3]!./src/styles/global.css ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: "Inter", system-ui, sans-serif;
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-orange-500: oklch(70.5% 0.213 47.604);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-fuchsia-500: oklch(66.7% 0.295 322.15);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-2xl: 42rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --radius-xs: 0.125rem;
    --radius-2xl: 1rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-bounce: bounce 1s infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: "Inter", system-ui, sans-serif;
    --default-mono-font-family: var(--font-mono);
    --font-homemade: "Homemade Apple", cursive;
    --font-cursive: "Homemade Apple", cursive;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .-top-12 {
    top: calc(var(--spacing) * -12);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-\[50\%\] {
    top: 50%;
  }
  .-right-2 {
    right: calc(var(--spacing) * -2);
  }
  .-right-12 {
    right: calc(var(--spacing) * -12);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .-bottom-6 {
    bottom: calc(var(--spacing) * -6);
  }
  .-bottom-12 {
    bottom: calc(var(--spacing) * -12);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-8 {
    bottom: calc(var(--spacing) * 8);
  }
  .-left-12 {
    left: calc(var(--spacing) * -12);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .left-\[50\%\] {
    left: 50%;
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-50 {
    z-index: 50;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .float-left {
    float: left;
  }
  .float-right {
    float: right;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-12 {
    margin-block: calc(var(--spacing) * 12);
  }
  .my-24 {
    margin-block: calc(var(--spacing) * 24);
  }
  .ms-4 {
    margin-inline-start: calc(var(--spacing) * 4);
  }
  .-mt-4 {
    margin-top: calc(var(--spacing) * -4);
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-18 {
    margin-top: calc(var(--spacing) * 18);
  }
  .mt-24 {
    margin-top: calc(var(--spacing) * 24);
  }
  .mt-auto {
    margin-top: auto;
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-6 {
    margin-right: calc(var(--spacing) * 6);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-24 {
    margin-bottom: calc(var(--spacing) * 24);
  }
  .-ml-2 {
    margin-left: calc(var(--spacing) * -2);
  }
  .-ml-4 {
    margin-left: calc(var(--spacing) * -4);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-6 {
    margin-left: calc(var(--spacing) * 6);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .field-sizing-content {
    field-sizing: content;
  }
  .aspect-\[4\/3\] {
    aspect-ratio: 4/3;
  }
  .aspect-\[4\/5\] {
    aspect-ratio: 4/5;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-11 {
    height: calc(var(--spacing) * 11);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-64 {
    height: calc(var(--spacing) * 64);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[70vh\] {
    max-height: 70vh;
  }
  .max-h-\[85vh\] {
    max-height: 85vh;
  }
  .max-h-\[90vh\] {
    max-height: 90vh;
  }
  .max-h-\[250px\] {
    max-height: 250px;
  }
  .min-h-16 {
    min-height: calc(var(--spacing) * 16);
  }
  .min-h-\[60vh\] {
    min-height: 60vh;
  }
  .min-h-\[80vh\] {
    min-height: 80vh;
  }
  .min-h-\[120px\] {
    min-height: 120px;
  }
  .min-h-\[200px\] {
    min-height: 200px;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-auto {
    width: auto;
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-sm {
    width: var(--container-sm);
  }
  .max-w-1\/2 {
    max-width: calc(1/2 * 100%);
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-\[24px\] {
    max-width: 24px;
  }
  .max-w-\[70\%\] {
    max-width: 70%;
  }
  .max-w-\[80lvw\] {
    max-width: 80lvw;
  }
  .max-w-\[90vw\] {
    max-width: 90vw;
  }
  .max-w-\[calc\(100\%-2rem\)\] {
    max-width: calc(100% - 2rem);
  }
  .max-w-\[calc\(min\(90vmin\,_80lvw\)\)\] {
    max-width: calc(min(90vmin, 80lvw));
  }
  .max-w-full {
    max-width: 100%;
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-\[8px\] {
    min-width: 8px;
  }
  .flex-1 {
    flex: 1;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .grow {
    flex-grow: 1;
  }
  .grow-0 {
    flex-grow: 0;
  }
  .basis-\[60\%\] {
    flex-basis: 60%;
  }
  .basis-full {
    flex-basis: 100%;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[-50\%\] {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[-50\%\] {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .rotate-90 {
    rotate: 90deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-bounce {
    animation: var(--animate-bounce);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .columns-auto {
    columns: auto;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-cols-\[24px_1fr\] {
    grid-template-columns: 24px 1fr;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .place-content-center {
    place-content: center;
  }
  .place-content-end {
    place-content: end;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .space-y-1\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-x-6 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius);
  }
  .rounded-md {
    border-radius: calc(var(--radius) - 2px);
  }
  .rounded-sm {
    border-radius: calc(var(--radius) - 4px);
  }
  .rounded-xl {
    border-radius: calc(var(--radius) + 4px);
  }
  .rounded-xs {
    border-radius: var(--radius-xs);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0px;
  }
  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-blue-600 {
    border-color: var(--color-blue-600);
  }
  .border-border {
    border-color: var(--border);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-800 {
    border-color: var(--color-gray-800);
  }
  .border-input {
    border-color: var(--input);
  }
  .border-neutral-500 {
    border-color: var(--color-neutral-500);
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-\[\#25d366\] {
    background-color: #25d366;
  }
  .bg-background {
    background-color: var(--background);
  }
  .bg-black\/0 {
    background-color: color-mix(in srgb, #000 0%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 0%, transparent);
    }
  }
  .bg-black\/40 {
    background-color: color-mix(in srgb, #000 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-black\/80 {
    background-color: color-mix(in srgb, #000 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 80%, transparent);
    }
  }
  .bg-black\/95 {
    background-color: color-mix(in srgb, #000 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 95%, transparent);
    }
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-blue-600\/10 {
    background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 10%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-600) 10%, transparent);
    }
  }
  .bg-blue-900 {
    background-color: var(--color-blue-900);
  }
  .bg-card {
    background-color: var(--card);
  }
  .bg-destructive {
    background-color: var(--destructive);
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-muted {
    background-color: var(--muted);
  }
  .bg-muted-foreground\/30 {
    background-color: var(--muted-foreground);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--muted-foreground) 30%, transparent);
    }
  }
  .bg-primary {
    background-color: var(--primary);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-700 {
    background-color: var(--color-red-700);
  }
  .bg-secondary {
    background-color: var(--secondary);
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-gradient-to-t {
    --tw-gradient-position: to top in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-black\/60 {
    --tw-gradient-from: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }
  .ps-6 {
    padding-inline-start: calc(var(--spacing) * 6);
  }
  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pr-1 {
    padding-right: calc(var(--spacing) * 1);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pr-\[max\(env\(safe-area-inset-right\)\,1\.5rem\)\] {
    padding-right: max(env(safe-area-inset-right), 1.5rem);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .pl-16 {
    padding-left: calc(var(--spacing) * 16);
  }
  .pl-\[max\(env\(safe-area-inset-left\)\,1\.5rem\)\] {
    padding-left: max(env(safe-area-inset-left), 1.5rem);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .align-baseline {
    vertical-align: baseline;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-cursive {
    font-family: var(--font-cursive);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-7 {
    --tw-leading: calc(var(--spacing) * 7);
    line-height: calc(var(--spacing) * 7);
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .text-balance {
    text-wrap: balance;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-card-foreground {
    color: var(--card-foreground);
  }
  .text-destructive {
    color: var(--destructive);
  }
  .text-foreground {
    color: var(--foreground);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-muted-foreground {
    color: var(--muted-foreground);
  }
  .text-orange-500 {
    color: var(--color-orange-500);
  }
  .text-primary {
    color: var(--primary);
  }
  .text-primary-foreground {
    color: var(--primary-foreground);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/70 {
    color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-yellow-500 {
    color: var(--color-yellow-500);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .not-italic {
    font-style: normal;
  }
  .underline-offset-4 {
    text-underline-offset: 4px;
  }
  .accent-foreground {
    accent-color: var(--foreground);
  }
  .opacity-50 {
    opacity: 50%;
  }
  .opacity-70 {
    opacity: 70%;
  }
  .opacity-80 {
    opacity: 80%;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.05));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-gray-100 {
    --tw-shadow-color: oklch(96.7% 0.003 264.542);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-gray-100) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-\[color\,box-shadow\] {
    transition-property: color,box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-group-hover\:text-gray-900 {
    &:is(:where(.group):is(:where(.group):hover *) *) {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .group-hover\:scale-105 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:border-gray-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-gray-300);
      }
    }
  }
  .group-hover\:bg-black\/20 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #000 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-black) 20%, transparent);
        }
      }
    }
  }
  .group-hover\:bg-blue-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .group-hover\:bg-white {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .group-hover\:text-blue-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .group-hover\:text-fuchsia-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-fuchsia-500);
      }
    }
  }
  .group-hover\:text-gray-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-gray-900);
      }
    }
  }
  .group-hover\:text-red-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-red-500);
      }
    }
  }
  .group-hover\:shadow-lg {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .group-data-\[disabled\=true\]\:pointer-events-none {
    &:is(:where(.group)[data-disabled="true"] *) {
      pointer-events: none;
    }
  }
  .group-data-\[disabled\=true\]\:opacity-50 {
    &:is(:where(.group)[data-disabled="true"] *) {
      opacity: 50%;
    }
  }
  .peer-disabled\:cursor-not-allowed {
    &:is(:where(.peer):disabled ~ *) {
      cursor: not-allowed;
    }
  }
  .peer-disabled\:opacity-50 {
    &:is(:where(.peer):disabled ~ *) {
      opacity: 50%;
    }
  }
  .selection\:bg-primary {
    & *::selection {
      background-color: var(--primary);
    }
    &::selection {
      background-color: var(--primary);
    }
  }
  .selection\:text-primary-foreground {
    & *::selection {
      color: var(--primary-foreground);
    }
    &::selection {
      color: var(--primary-foreground);
    }
  }
  .file\:inline-flex {
    &::file-selector-button {
      display: inline-flex;
    }
  }
  .file\:h-7 {
    &::file-selector-button {
      height: calc(var(--spacing) * 7);
    }
  }
  .file\:border-0 {
    &::file-selector-button {
      border-style: var(--tw-border-style);
      border-width: 0px;
    }
  }
  .file\:bg-transparent {
    &::file-selector-button {
      background-color: transparent;
    }
  }
  .file\:text-sm {
    &::file-selector-button {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .file\:font-medium {
    &::file-selector-button {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
  }
  .file\:text-foreground {
    &::file-selector-button {
      color: var(--foreground);
    }
  }
  .placeholder\:text-muted-foreground {
    &::placeholder {
      color: var(--muted-foreground);
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:top-3 {
    &::before {
      content: var(--tw-content);
      top: calc(var(--spacing) * 3);
    }
  }
  .before\:left-3 {
    &::before {
      content: var(--tw-content);
      left: calc(var(--spacing) * 3);
    }
  }
  .before\:font-serif {
    &::before {
      content: var(--tw-content);
      font-family: var(--font-serif);
    }
  }
  .before\:text-7xl {
    &::before {
      content: var(--tw-content);
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .before\:text-gray-700 {
    &::before {
      content: var(--tw-content);
      color: var(--color-gray-700);
    }
  }
  .before\:content-\[\'“\'\] {
    &::before {
      content: var(--tw-content);
      --tw-content: '“';
      content: var(--tw-content);
    }
  }
  .after\:transition-transform {
    &::after {
      content: var(--tw-content);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .after\:duration-75 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 75ms;
      transition-duration: 75ms;
    }
  }
  .after\:content-\[\'_→\'\] {
    &::after {
      content: var(--tw-content);
      --tw-content: ' →';
      content: var(--tw-content);
    }
  }
  .not-last\:after\:content-\[\'\,_\'\] {
    &:not(*:last-child) {
      &::after {
        content: var(--tw-content);
        --tw-content: ', ';
        content: var(--tw-content);
      }
    }
  }
  .focus-within\:w-96 {
    &:focus-within {
      width: calc(var(--spacing) * 96);
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:bg-\[\#128c7e\] {
    &:hover {
      @media (hover: hover) {
        background-color: #128c7e;
      }
    }
  }
  .hover\:bg-accent {
    &:hover {
      @media (hover: hover) {
        background-color: var(--accent);
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-destructive\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-muted-foreground\/50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--muted-foreground);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--muted-foreground) 50%, transparent);
        }
      }
    }
  }
  .hover\:bg-primary\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--primary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--primary) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-secondary\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--secondary);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-white\/20 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, #fff 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
        }
      }
    }
  }
  .hover\:text-accent-foreground {
    &:hover {
      @media (hover: hover) {
        color: var(--accent-foreground);
      }
    }
  }
  .hover\:text-gray-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-gray-500);
      }
    }
  }
  .hover\:text-primary {
    &:hover {
      @media (hover: hover) {
        color: var(--primary);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:opacity-100 {
    &:hover {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-ring {
    &:focus {
      --tw-ring-color: var(--ring);
    }
  }
  .focus\:ring-offset-2 {
    &:focus {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:border-ring {
    &:focus-visible {
      border-color: var(--ring);
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-\[3px\] {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-destructive\/20 {
    &:focus-visible {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .focus-visible\:ring-ring {
    &:focus-visible {
      --tw-ring-color: var(--ring);
    }
  }
  .focus-visible\:ring-ring\/50 {
    &:focus-visible {
      --tw-ring-color: var(--ring);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
      }
    }
  }
  .focus-visible\:ring-offset-2 {
    &:focus-visible {
      --tw-ring-offset-width: 2px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    }
  }
  .focus-visible\:outline-none {
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:cursor-not-allowed {
    &:disabled {
      cursor: not-allowed;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .aria-invalid\:border-destructive {
    &[aria-invalid="true"] {
      border-color: var(--destructive);
    }
  }
  .aria-invalid\:ring-destructive\/20 {
    &[aria-invalid="true"] {
      --tw-ring-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
      }
    }
  }
  .data-\[error\=true\]\:text-destructive {
    &[data-error="true"] {
      color: var(--destructive);
    }
  }
  .data-\[state\=open\]\:bg-accent {
    &[data-state="open"] {
      background-color: var(--accent);
    }
  }
  .data-\[state\=open\]\:text-muted-foreground {
    &[data-state="open"] {
      color: var(--muted-foreground);
    }
  }
  .max-sm\:max-w-lg {
    @media (width < 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\:col-span-3 {
    @media (width >= 40rem) {
      grid-column: span 3 / span 3;
    }
  }
  .sm\:max-w-lg {
    @media (width >= 40rem) {
      max-width: var(--container-lg);
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:justify-end {
    @media (width >= 40rem) {
      justify-content: flex-end;
    }
  }
  .sm\:space-x-2 {
    @media (width >= 40rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .sm\:rounded-lg {
    @media (width >= 40rem) {
      border-radius: var(--radius);
    }
  }
  .sm\:text-left {
    @media (width >= 40rem) {
      text-align: left;
    }
  }
  .md\:order-2 {
    @media (width >= 48rem) {
      order: 2;
    }
  }
  .md\:col-span-1 {
    @media (width >= 48rem) {
      grid-column: span 1 / span 1;
    }
  }
  .md\:-ml-4 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * -4);
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:items-start {
    @media (width >= 48rem) {
      align-items: flex-start;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:border-b-0 {
    @media (width >= 48rem) {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
  .md\:pl-4 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 4);
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:text-xl {
    @media (width >= 48rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .lg\:order-1 {
    @media (width >= 64rem) {
      order: 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:min-w-64 {
    @media (width >= 64rem) {
      min-width: calc(var(--spacing) * 64);
    }
  }
  .lg\:columns-2 {
    @media (width >= 64rem) {
      columns: 2;
    }
  }
  .lg\:grid-cols-2 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-4 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .lg\:grid-cols-5 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(5, minmax(0, 1fr));
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-start {
    @media (width >= 64rem) {
      align-items: flex-start;
    }
  }
  .lg\:justify-start {
    @media (width >= 64rem) {
      justify-content: flex-start;
    }
  }
  .lg\:gap-20 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 20);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .lg\:text-2xl {
    @media (width >= 64rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .lg\:text-4xl {
    @media (width >= 64rem) {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  .lg\:text-7xl {
    @media (width >= 64rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .\@sm\:block {
    @container (width >= 24rem) {
      display: block;
    }
  }
  .\@sm\:w-fit {
    @container (width >= 24rem) {
      width: fit-content;
    }
  }
  .\@md\:grid-cols-2 {
    @container (width >= 28rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .\@lg\:float-left {
    @container (width >= 32rem) {
      float: left;
    }
  }
  .\@lg\:float-right {
    @container (width >= 32rem) {
      float: right;
    }
  }
  .\@lg\:mr-6 {
    @container (width >= 32rem) {
      margin-right: calc(var(--spacing) * 6);
    }
  }
  .\@lg\:ml-6 {
    @container (width >= 32rem) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .\@lg\:h-80 {
    @container (width >= 32rem) {
      height: calc(var(--spacing) * 80);
    }
  }
  .\@lg\:max-h-\[300px\] {
    @container (width >= 32rem) {
      max-height: 300px;
    }
  }
  .\@lg\:max-w-1\/2 {
    @container (width >= 32rem) {
      max-width: calc(1/2 * 100%);
    }
  }
  .\@lg\:max-w-\[75\%\] {
    @container (width >= 32rem) {
      max-width: 75%;
    }
  }
  .\@lg\:basis-\[50\%\] {
    @container (width >= 32rem) {
      flex-basis: 50%;
    }
  }
  .\@2xl\:basis-\[40\%\] {
    @container (width >= 42rem) {
      flex-basis: 40%;
    }
  }
  .\@4xl\:basis-\[25\%\] {
    @container (width >= 56rem) {
      flex-basis: 25%;
    }
  }
  .dark\:block {
    &:is(.dark *) {
      display: block;
    }
  }
  .dark\:hidden {
    &:is(.dark *) {
      display: none;
    }
  }
  .dark\:border-border\/15 {
    &:is(.dark *) {
      border-color: var(--border);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--border) 15%, transparent);
      }
    }
  }
  .dark\:border-gray-700 {
    &:is(.dark *) {
      border-color: var(--color-gray-700);
    }
  }
  .dark\:border-neutral-700 {
    &:is(.dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:border-neutral-800 {
    &:is(.dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-destructive\/60 {
    &:is(.dark *) {
      background-color: var(--destructive);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
      }
    }
  }
  .dark\:bg-input\/30 {
    &:is(.dark *) {
      background-color: var(--input);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--input) 30%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800 {
    &:is(.dark *) {
      background-color: var(--color-neutral-800);
    }
  }
  .dark\:bg-neutral-900 {
    &:is(.dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:text-gray-50 {
    &:is(.dark *) {
      color: var(--color-gray-50);
    }
  }
  .dark\:text-gray-100 {
    &:is(.dark *) {
      color: var(--color-gray-100);
    }
  }
  .dark\:text-gray-400 {
    &:is(.dark *) {
      color: var(--color-gray-400);
    }
  }
  .dark\:shadow-none {
    &:is(.dark *) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .dark\:group-group-hover\:text-gray-100 {
    &:is(.dark *) {
      &:is(:where(.group):is(:where(.group):hover *) *) {
        @media (hover: hover) {
          color: var(--color-gray-100);
        }
      }
    }
  }
  .dark\:group-hover\:bg-neutral-700 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          background-color: var(--color-neutral-700);
        }
      }
    }
  }
  .dark\:group-hover\:text-gray-100 {
    &:is(.dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-gray-100);
        }
      }
    }
  }
  .dark\:hover\:bg-gray-700 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-700);
        }
      }
    }
  }
  .dark\:hover\:text-gray-400 {
    &:is(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-gray-400);
        }
      }
    }
  }
  .dark\:focus-visible\:ring-destructive\/40 {
    &:is(.dark *) {
      &:focus-visible {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .dark\:aria-invalid\:ring-destructive\/40 {
    &:is(.dark *) {
      &[aria-invalid="true"] {
        --tw-ring-color: var(--destructive);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
        }
      }
    }
  }
  .\[\&_svg\]\:pointer-events-none {
    & svg {
      pointer-events: none;
    }
  }
  .\[\&_svg\]\:size-4 {
    & svg {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\[\&_svg\]\:shrink-0 {
    & svg {
      flex-shrink: 0;
    }
  }
  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 {
    & svg:not([class*='size-']) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  .\[path\]\:fill-current {
    &:is(path) {
      fill: currentcolor;
    }
  }
  .\[\&\>svg\]\:pointer-events-none {
    &>svg {
      pointer-events: none;
    }
  }
  .\[\&\>svg\]\:size-3 {
    &>svg {
      width: calc(var(--spacing) * 3);
      height: calc(var(--spacing) * 3);
    }
  }
  .\[a\&\]\:hover\:bg-accent {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--accent);
        }
      }
    }
  }
  .\[a\&\]\:hover\:bg-destructive\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--destructive);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
          }
        }
      }
    }
  }
  .\[a\&\]\:hover\:bg-primary\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--primary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--primary) 90%, transparent);
          }
        }
      }
    }
  }
  .\[a\&\]\:hover\:bg-secondary\/90 {
    a& {
      &:hover {
        @media (hover: hover) {
          background-color: var(--secondary);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--secondary) 90%, transparent);
          }
        }
      }
    }
  }
  .\[a\&\]\:hover\:text-accent-foreground {
    a& {
      &:hover {
        @media (hover: hover) {
          color: var(--accent-foreground);
        }
      }
    }
  }
}
/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --x-font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --x-color-red-100: oklch(0.936 0.032 17.717);
    --x-color-red-200: oklch(0.885 0.062 18.334);
    --x-color-red-500: oklch(0.637 0.237 25.331);
    --x-color-red-900: oklch(0.396 0.141 25.723);
    --x-color-orange-50: oklch(0.98 0.016 73.684);
    --x-color-orange-100: oklch(0.954 0.038 75.164);
    --x-color-orange-300: oklch(0.837 0.128 66.29);
    --x-color-orange-400: oklch(0.75 0.183 55.934);
    --x-color-orange-800: oklch(0.47 0.157 37.304);
    --x-color-yellow-50: oklch(0.987 0.026 102.212);
    --x-color-yellow-100: oklch(0.973 0.071 103.193);
    --x-color-yellow-200: oklch(0.945 0.129 101.54);
    --x-color-yellow-700: oklch(0.554 0.135 66.442);
    --x-color-yellow-900: oklch(0.421 0.095 57.708);
    --x-color-blue-100: oklch(0.932 0.032 255.585);
    --x-color-blue-200: oklch(0.882 0.059 254.128);
    --x-color-blue-900: oklch(0.379 0.146 265.522);
    --x-color-slate-50: oklch(0.984 0.003 247.858);
    --x-color-slate-100: oklch(0.968 0.007 247.896);
    --x-color-slate-200: oklch(0.929 0.013 255.508);
    --x-color-slate-700: oklch(0.372 0.044 257.287);
    --x-color-slate-900: oklch(0.208 0.042 265.755);
    --x-color-gray-50: oklch(0.985 0.002 247.839);
    --x-color-gray-100: oklch(0.967 0.003 264.542);
    --x-color-gray-200: oklch(0.928 0.006 264.531);
    --x-color-gray-300: oklch(0.872 0.01 258.338);
    --x-color-gray-400: oklch(0.707 0.022 261.325);
    --x-color-gray-500: oklch(0.551 0.027 264.364);
    --x-color-gray-600: oklch(0.446 0.03 256.802);
    --x-color-gray-700: oklch(0.373 0.034 259.733);
    --x-color-gray-800: oklch(0.278 0.033 256.848);
    --x-color-gray-900: oklch(0.21 0.034 264.665);
    --x-color-neutral-50: oklch(0.985 0 0);
    --x-color-neutral-200: oklch(0.922 0 0);
    --x-color-neutral-400: oklch(0.708 0 0);
    --x-color-neutral-500: oklch(0.556 0 0);
    --x-color-neutral-600: oklch(0.439 0 0);
    --x-color-neutral-700: oklch(0.371 0 0);
    --x-color-neutral-800: oklch(0.269 0 0);
    --x-color-neutral-900: oklch(0.205 0 0);
    --x-color-black: #000;
    --x-color-white: #fff;
    --x-spacing: 0.25rem;
    --x-container-2xl: 42rem;
    --x-text-xs: 0.75rem;
    --x-text-xs--line-height: calc(1 / 0.75);
    --x-text-sm: 0.875rem;
    --x-text-sm--line-height: calc(1.25 / 0.875);
    --x-text-base: 1rem;
    --x-text-base--line-height: calc(1.5 / 1);
    --x-text-lg: 1.125rem;
    --x-text-lg--line-height: calc(1.75 / 1.125);
    --x-text-xl: 1.25rem;
    --x-text-xl--line-height: calc(1.75 / 1.25);
    --x-text-2xl: 1.5rem;
    --x-text-2xl--line-height: calc(2 / 1.5);
    --x-text-3xl: 1.875rem;
    --x-text-3xl--line-height: calc(2.25 / 1.875);
    --x-text-4xl: 2.25rem;
    --x-text-4xl--line-height: calc(2.5 / 2.25);
    --x-font-weight-normal: 400;
    --x-font-weight-medium: 500;
    --x-font-weight-semibold: 600;
    --x-font-weight-bold: 700;
    --x-tracking-tight: -0.025em;
    --x-leading-tight: 1.25;
    --x-radius-sm: 0.25rem;
    --x-radius-md: 0.375rem;
    --x-radius-lg: 0.5rem;
    --x-radius-xl: 0.75rem;
    --x-ease-out: cubic-bezier(0, 0, 0.2, 1);
    --x-ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --x-animate-spin: spin 1s linear infinite;
    --x-blur-md: 12px;
    --x-default-transition-duration: 150ms;
    --x-default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --x-color-nextra-bg: rgb(var(--nextra-bg));
    --x-color-primary-50: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 52%)
  );
    --x-color-primary-100: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 49%)
  );
    --x-color-primary-200: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 41%)
  );
    --x-color-primary-300: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 32%)
  );
    --x-color-primary-400: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 21%)
  );
    --x-color-primary-500: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) + 5%)
  );
    --x-color-primary-600: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      var(--nextra-primary-lightness)
  );
    --x-color-primary-700: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) - 6%)
  );
    --x-color-primary-800: hsl(
    var(--nextra-primary-hue) var(--nextra-primary-saturation)
      calc(var(--nextra-primary-lightness) - 13%)
  );
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: currentColor;
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .x\:pointer-events-none {
    pointer-events: none;
  }
  .x\:sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .x\:absolute {
    position: absolute;
  }
  .x\:fixed {
    position: fixed;
  }
  .x\:relative {
    position: relative;
  }
  .x\:sticky {
    position: sticky;
  }
  .x\:inset-0 {
    inset: calc(var(--x-spacing) * 0);
  }
  .x\:end-1\.5 {
    inset-inline-end: calc(var(--x-spacing) * 1.5);
  }
  .x\:top-\(--nextra-navbar-height\) {
    top: var(--nextra-navbar-height);
  }
  .x\:top-0 {
    top: calc(var(--x-spacing) * 0);
  }
  .x\:top-2 {
    top: calc(var(--x-spacing) * 2);
  }
  .x\:top-14 {
    top: calc(var(--x-spacing) * 14);
  }
  .x\:right-4 {
    right: calc(var(--x-spacing) * 4);
  }
  .x\:bottom-0 {
    bottom: calc(var(--x-spacing) * 0);
  }
  .x\:-z-1 {
    z-index: calc(1 * -1);
  }
  .x\:z-1 {
    z-index: 1;
  }
  .x\:z-20 {
    z-index: 20;
  }
  .x\:z-30 {
    z-index: 30;
  }
  .x\:z-50 {
    z-index: 50;
  }
  .x\:order-last {
    order: 9999;
  }
  .x\:m-0 {
    margin: calc(var(--x-spacing) * 0);
  }
  .x\:-mx-4 {
    margin-inline: calc(var(--x-spacing) * -4);
  }
  .x\:mx-2 {
    margin-inline: calc(var(--x-spacing) * 2);
  }
  .x\:mx-2\.5 {
    margin-inline: calc(var(--x-spacing) * 2.5);
  }
  .x\:mx-4 {
    margin-inline: calc(var(--x-spacing) * 4);
  }
  .x\:mx-auto {
    margin-inline: auto;
  }
  .x\:my-1\.5 {
    margin-block: calc(var(--x-spacing) * 1.5);
  }
  .x\:my-2 {
    margin-block: calc(var(--x-spacing) * 2);
  }
  .x\:my-3 {
    margin-block: calc(var(--x-spacing) * 3);
  }
  .x\:my-4 {
    margin-block: calc(var(--x-spacing) * 4);
  }
  .x\:my-8 {
    margin-block: calc(var(--x-spacing) * 8);
  }
  .x\:ms-2 {
    margin-inline-start: calc(var(--x-spacing) * 2);
  }
  .x\:ms-3 {
    margin-inline-start: calc(var(--x-spacing) * 3);
  }
  .x\:ms-4 {
    margin-inline-start: calc(var(--x-spacing) * 4);
  }
  .x\:ms-6 {
    margin-inline-start: calc(var(--x-spacing) * 6);
  }
  .x\:ms-9 {
    margin-inline-start: calc(var(--x-spacing) * 9);
  }
  .x\:ms-12 {
    margin-inline-start: calc(var(--x-spacing) * 12);
  }
  .x\:ms-auto {
    margin-inline-start: auto;
  }
  .x\:me-1 {
    margin-inline-end: calc(var(--x-spacing) * 1);
  }
  .x\:me-auto {
    margin-inline-end: auto;
  }
  .x\:mt-1 {
    margin-top: calc(var(--x-spacing) * 1);
  }
  .x\:mt-1\.5 {
    margin-top: calc(var(--x-spacing) * 1.5);
  }
  .x\:mt-2 {
    margin-top: calc(var(--x-spacing) * 2);
  }
  .x\:mt-4 {
    margin-top: calc(var(--x-spacing) * 4);
  }
  .x\:mt-6 {
    margin-top: calc(var(--x-spacing) * 6);
  }
  .x\:mt-8 {
    margin-top: calc(var(--x-spacing) * 8);
  }
  .x\:mt-10 {
    margin-top: calc(var(--x-spacing) * 10);
  }
  .x\:mt-12 {
    margin-top: calc(var(--x-spacing) * 12);
  }
  .x\:mt-16 {
    margin-top: calc(var(--x-spacing) * 16);
  }
  .x\:mt-auto {
    margin-top: auto;
  }
  .x\:-mb-0\.5 {
    margin-bottom: calc(var(--x-spacing) * -0.5);
  }
  .x\:mb-2 {
    margin-bottom: calc(var(--x-spacing) * 2);
  }
  .x\:mb-8 {
    margin-bottom: calc(var(--x-spacing) * 8);
  }
  .x\:mb-12 {
    margin-bottom: calc(var(--x-spacing) * 12);
  }
  .x\:block {
    display: block;
  }
  .x\:flex {
    display: flex;
  }
  .x\:grid {
    display: grid;
  }
  .x\:hidden {
    display: none;
  }
  .x\:inline {
    display: inline;
  }
  .x\:inline-flex {
    display: inline-flex;
  }
  .x\:size-full {
    width: 100%;
    height: 100%;
  }
  .x\:h-0 {
    height: calc(var(--x-spacing) * 0);
  }
  .x\:h-5 {
    height: calc(var(--x-spacing) * 5);
  }
  .x\:h-7 {
    height: calc(var(--x-spacing) * 7);
  }
  .x\:h-12 {
    height: calc(var(--x-spacing) * 12);
  }
  .x\:h-\[calc\(100dvh-var\(--nextra-menu-height\)\)\] {
    height: calc(100dvh - var(--nextra-menu-height));
  }
  .x\:h-\[calc\(100dvh-var\(--nextra-navbar-height\)\)\] {
    height: calc(100dvh - var(--nextra-navbar-height));
  }
  .x\:max-h-64 {
    max-height: calc(var(--x-spacing) * 64);
  }
  .x\:max-h-\[calc\(100vh-var\(--nextra-navbar-height\)\)\] {
    max-height: calc(100vh - var(--nextra-navbar-height));
  }
  .x\:max-h-\[min\(calc\(100vh-5rem\)\,256px\)\]\! {
    max-height: min(calc(100vh - 5rem), 256px) !important;
  }
  .x\:min-h-\[calc\(100vh-var\(--nextra-navbar-height\)\)\] {
    min-height: calc(100vh - var(--nextra-navbar-height));
  }
  .x\:w-20 {
    width: calc(var(--x-spacing) * 20);
  }
  .x\:w-64 {
    width: calc(var(--x-spacing) * 64);
  }
  .x\:w-full {
    width: 100%;
  }
  .x\:max-w-\(--nextra-content-width\) {
    max-width: var(--nextra-content-width);
  }
  .x\:max-w-2xl\! {
    max-width: var(--x-container-2xl) !important;
  }
  .x\:max-w-6 {
    max-width: calc(var(--x-spacing) * 6);
  }
  .x\:max-w-\[50\%\] {
    max-width: 50%;
  }
  .x\:min-w-\(--button-width\) {
    min-width: var(--button-width);
  }
  .x\:min-w-0 {
    min-width: calc(var(--x-spacing) * 0);
  }
  .x\:min-w-6 {
    min-width: calc(var(--x-spacing) * 6);
  }
  .x\:shrink-0 {
    flex-shrink: 0;
  }
  .x\:grow {
    flex-grow: 1;
  }
  .x\:origin-center {
    transform-origin: center;
  }
  .x\:origin-top {
    transform-origin: top;
  }
  .x\:-rotate-90 {
    rotate: calc(90deg * -1);
  }
  .x\:\[transform\:translate3d\(0\,-100\%\,0\)\] {
    transform: translate3d(0,-100%,0);
  }
  .x\:\[transform\:translate3d\(0\,0\,0\)\] {
    transform: translate3d(0,0,0);
  }
  .x\:transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .x\:animate-spin {
    animation: var(--x-animate-spin);
  }
  .x\:cursor-pointer {
    cursor: pointer;
  }
  .x\:scroll-m-12 {
    scroll-margin: calc(var(--x-spacing) * 12);
  }
  .x\:scroll-my-6 {
    scroll-margin-block: calc(var(--x-spacing) * 6);
  }
  .x\:scroll-py-6 {
    scroll-padding-block: calc(var(--x-spacing) * 6);
  }
  .x\:list-decimal {
    list-style-type: decimal;
  }
  .x\:list-disc {
    list-style-type: disc;
  }
  .x\:grid-rows-\[min-content_1fr_min-content\] {
    grid-template-rows: min-content 1fr min-content;
  }
  .x\:flex-col {
    flex-direction: column;
  }
  .x\:flex-wrap {
    flex-wrap: wrap;
  }
  .x\:items-center {
    align-items: center;
  }
  .x\:items-start {
    align-items: flex-start;
  }
  .x\:justify-between {
    justify-content: space-between;
  }
  .x\:justify-center {
    justify-content: center;
  }
  .x\:justify-end {
    justify-content: flex-end;
  }
  .x\:justify-start {
    justify-content: flex-start;
  }
  .x\:gap-1 {
    gap: calc(var(--x-spacing) * 1);
  }
  .x\:gap-1\.5 {
    gap: calc(var(--x-spacing) * 1.5);
  }
  .x\:gap-2 {
    gap: calc(var(--x-spacing) * 2);
  }
  .x\:gap-3 {
    gap: calc(var(--x-spacing) * 3);
  }
  .x\:gap-4 {
    gap: calc(var(--x-spacing) * 4);
  }
  .x\:self-stretch {
    align-self: stretch;
  }
  .x\:truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .x\:overflow-hidden {
    overflow: hidden;
  }
  .x\:overflow-x-auto {
    overflow-x: auto;
  }
  .x\:overflow-y-auto {
    overflow-y: auto;
  }
  .x\:overflow-y-hidden {
    overflow-y: hidden;
  }
  .x\:overscroll-contain {
    overscroll-behavior: contain;
  }
  .x\:overscroll-x-contain {
    overscroll-behavior-x: contain;
  }
  .x\:overscroll-y-contain {
    overscroll-behavior-y: contain;
  }
  .x\:rounded {
    border-radius: 0.25rem;
  }
  .x\:rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .x\:rounded-lg {
    border-radius: var(--x-radius-lg);
  }
  .x\:rounded-md {
    border-radius: var(--x-radius-md);
  }
  .x\:rounded-sm {
    border-radius: var(--x-radius-sm);
  }
  .x\:rounded-xl {
    border-radius: var(--x-radius-xl);
  }
  .x\:rounded-t {
    border-top-left-radius: 0.25rem;
    border-top-right-radius: 0.25rem;
  }
  .x\:rounded-t-md {
    border-top-left-radius: var(--x-radius-md);
    border-top-right-radius: var(--x-radius-md);
  }
  .x\:rounded-b-md {
    border-bottom-right-radius: var(--x-radius-md);
    border-bottom-left-radius: var(--x-radius-md);
  }
  .x\:border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .x\:border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }
  .x\:border-s-2 {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 2px;
  }
  .x\:border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .x\:border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .x\:border-b-0 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0px;
  }
  .x\:border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .x\:border-black\/5 {
    border-color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--x-color-black) 5%, transparent);
    }
  }
  .x\:border-black\/10 {
    border-color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--x-color-black) 10%, transparent);
    }
  }
  .x\:border-blue-200 {
    border-color: var(--x-color-blue-200);
  }
  .x\:border-current {
    border-color: currentColor;
  }
  .x\:border-gray-200 {
    border-color: var(--x-color-gray-200);
  }
  .x\:border-gray-300 {
    border-color: var(--x-color-gray-300);
  }
  .x\:border-orange-100 {
    border-color: var(--x-color-orange-100);
  }
  .x\:border-red-200 {
    border-color: var(--x-color-red-200);
  }
  .x\:border-transparent {
    border-color: transparent;
  }
  .x\:border-yellow-100 {
    border-color: var(--x-color-yellow-100);
  }
  .x\:bg-black\/\[\.05\] {
    background-color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-black) 5%, transparent);
    }
  }
  .x\:bg-blue-100 {
    background-color: var(--x-color-blue-100);
  }
  .x\:bg-gray-100 {
    background-color: var(--x-color-gray-100);
  }
  .x\:bg-gray-200 {
    background-color: var(--x-color-gray-200);
  }
  .x\:bg-gray-400\/20 {
    background-color: var(--x-color-gray-400);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-gray-400) 20%, transparent);
    }
  }
  .x\:bg-neutral-900 {
    background-color: var(--x-color-neutral-900);
  }
  .x\:bg-nextra-bg {
    background-color: var(--x-color-nextra-bg);
  }
  .x\:bg-nextra-bg\/70 {
    background-color: var(--x-color-nextra-bg);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-nextra-bg) 70%, transparent);
    }
  }
  .x\:bg-orange-50 {
    background-color: var(--x-color-orange-50);
  }
  .x\:bg-primary-50 {
    background-color: var(--x-color-primary-50);
  }
  .x\:bg-primary-100 {
    background-color: var(--x-color-primary-100);
  }
  .x\:bg-primary-500\/10 {
    background-color: var(--x-color-primary-500);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-primary-500) 10%, transparent);
    }
  }
  .x\:bg-red-100 {
    background-color: var(--x-color-red-100);
  }
  .x\:bg-transparent {
    background-color: transparent;
  }
  .x\:bg-white {
    background-color: var(--x-color-white);
  }
  .x\:bg-yellow-50 {
    background-color: var(--x-color-yellow-50);
  }
  .x\:p-0 {
    padding: calc(var(--x-spacing) * 0);
  }
  .x\:p-0\.5 {
    padding: calc(var(--x-spacing) * 0.5);
  }
  .x\:p-1 {
    padding: calc(var(--x-spacing) * 1);
  }
  .x\:p-1\.5 {
    padding: calc(var(--x-spacing) * 1.5);
  }
  .x\:p-2 {
    padding: calc(var(--x-spacing) * 2);
  }
  .x\:p-4 {
    padding: calc(var(--x-spacing) * 4);
  }
  .x\:px-1\.5 {
    padding-inline: calc(var(--x-spacing) * 1.5);
  }
  .x\:px-2 {
    padding-inline: calc(var(--x-spacing) * 2);
  }
  .x\:px-2\.5 {
    padding-inline: calc(var(--x-spacing) * 2.5);
  }
  .x\:px-3 {
    padding-inline: calc(var(--x-spacing) * 3);
  }
  .x\:px-4 {
    padding-inline: calc(var(--x-spacing) * 4);
  }
  .x\:px-8 {
    padding-inline: calc(var(--x-spacing) * 8);
  }
  .x\:py-1 {
    padding-block: calc(var(--x-spacing) * 1);
  }
  .x\:py-1\.5 {
    padding-block: calc(var(--x-spacing) * 1.5);
  }
  .x\:py-2 {
    padding-block: calc(var(--x-spacing) * 2);
  }
  .x\:py-2\.5 {
    padding-block: calc(var(--x-spacing) * 2.5);
  }
  .x\:py-3 {
    padding-block: calc(var(--x-spacing) * 3);
  }
  .x\:py-4 {
    padding-block: calc(var(--x-spacing) * 4);
  }
  .x\:py-12 {
    padding-block: calc(var(--x-spacing) * 12);
  }
  .x\:ps-3 {
    padding-inline-start: calc(var(--x-spacing) * 3);
  }
  .x\:ps-4 {
    padding-inline-start: calc(var(--x-spacing) * 4);
  }
  .x\:ps-6 {
    padding-inline-start: calc(var(--x-spacing) * 6);
  }
  .x\:pe-2 {
    padding-inline-end: calc(var(--x-spacing) * 2);
  }
  .x\:pe-4 {
    padding-inline-end: calc(var(--x-spacing) * 4);
  }
  .x\:pe-9 {
    padding-inline-end: calc(var(--x-spacing) * 9);
  }
  .x\:pt-\(--nextra-navbar-height\) {
    padding-top: var(--nextra-navbar-height);
  }
  .x\:pt-1 {
    padding-top: calc(var(--x-spacing) * 1);
  }
  .x\:pt-4 {
    padding-top: calc(var(--x-spacing) * 4);
  }
  .x\:pt-6 {
    padding-top: calc(var(--x-spacing) * 6);
  }
  .x\:pt-8 {
    padding-top: calc(var(--x-spacing) * 8);
  }
  .x\:pr-\[max\(env\(safe-area-inset-right\)\,1\.5rem\)\] {
    padding-right: max(env(safe-area-inset-right), 1.5rem);
  }
  .x\:pb-1 {
    padding-bottom: calc(var(--x-spacing) * 1);
  }
  .x\:pb-1\.5 {
    padding-bottom: calc(var(--x-spacing) * 1.5);
  }
  .x\:pb-8 {
    padding-bottom: calc(var(--x-spacing) * 8);
  }
  .x\:pb-\[env\(safe-area-inset-bottom\)\] {
    padding-bottom: env(safe-area-inset-bottom);
  }
  .x\:pb-px {
    padding-bottom: 1px;
  }
  .x\:pl-\[max\(env\(safe-area-inset-left\)\,1\.5rem\)\] {
    padding-left: max(env(safe-area-inset-left), 1.5rem);
  }
  .x\:text-center {
    text-align: center;
  }
  .x\:text-end {
    text-align: end;
  }
  .x\:text-start {
    text-align: start;
  }
  .x\:align-baseline {
    vertical-align: baseline;
  }
  .x\:font-mono {
    font-family: var(--x-font-mono);
  }
  .x\:text-2xl {
    font-size: var(--x-text-2xl);
    line-height: var(--tw-leading, var(--x-text-2xl--line-height));
  }
  .x\:text-3xl {
    font-size: var(--x-text-3xl);
    line-height: var(--tw-leading, var(--x-text-3xl--line-height));
  }
  .x\:text-4xl {
    font-size: var(--x-text-4xl);
    line-height: var(--tw-leading, var(--x-text-4xl--line-height));
  }
  .x\:text-base {
    font-size: var(--x-text-base);
    line-height: var(--tw-leading, var(--x-text-base--line-height));
  }
  .x\:text-lg {
    font-size: var(--x-text-lg);
    line-height: var(--tw-leading, var(--x-text-lg--line-height));
  }
  .x\:text-sm {
    font-size: var(--x-text-sm);
    line-height: var(--tw-leading, var(--x-text-sm--line-height));
  }
  .x\:text-xl {
    font-size: var(--x-text-xl);
    line-height: var(--tw-leading, var(--x-text-xl--line-height));
  }
  .x\:text-xs {
    font-size: var(--x-text-xs);
    line-height: var(--tw-leading, var(--x-text-xs--line-height));
  }
  .x\:text-\[\.9em\] {
    font-size: .9em;
  }
  .x\:text-\[11px\] {
    font-size: 11px;
  }
  .x\:leading-5 {
    --tw-leading: calc(var(--x-spacing) * 5);
    line-height: calc(var(--x-spacing) * 5);
  }
  .x\:leading-7 {
    --tw-leading: calc(var(--x-spacing) * 7);
    line-height: calc(var(--x-spacing) * 7);
  }
  .x\:leading-\[1\.35rem\] {
    --tw-leading: 1.35rem;
    line-height: 1.35rem;
  }
  .x\:leading-tight {
    --tw-leading: var(--x-leading-tight);
    line-height: var(--x-leading-tight);
  }
  .x\:font-bold {
    --tw-font-weight: var(--x-font-weight-bold);
    font-weight: var(--x-font-weight-bold);
  }
  .x\:font-medium {
    --tw-font-weight: var(--x-font-weight-medium);
    font-weight: var(--x-font-weight-medium);
  }
  .x\:font-semibold {
    --tw-font-weight: var(--x-font-weight-semibold);
    font-weight: var(--x-font-weight-semibold);
  }
  .x\:tracking-tight {
    --tw-tracking: var(--x-tracking-tight);
    letter-spacing: var(--x-tracking-tight);
  }
  .x\:break-words {
    overflow-wrap: break-word;
  }
  .x\:\[word-break\:break-word\] {
    word-break: break-word;
  }
  .x\:break-all {
    word-break: break-all;
  }
  .x\:text-ellipsis {
    text-overflow: ellipsis;
  }
  .x\:hyphens-auto {
    -webkit-hyphens: auto;
    hyphens: auto;
  }
  .x\:whitespace-nowrap {
    white-space: nowrap;
  }
  .x\:whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .x\:text-black {
    color: var(--x-color-black);
  }
  .x\:text-blue-900 {
    color: var(--x-color-blue-900);
  }
  .x\:text-current {
    color: currentColor;
  }
  .x\:text-gray-100 {
    color: var(--x-color-gray-100);
  }
  .x\:text-gray-400 {
    color: var(--x-color-gray-400);
  }
  .x\:text-gray-500 {
    color: var(--x-color-gray-500);
  }
  .x\:text-gray-600 {
    color: var(--x-color-gray-600);
  }
  .x\:text-gray-700 {
    color: var(--x-color-gray-700);
  }
  .x\:text-gray-800 {
    color: var(--x-color-gray-800);
  }
  .x\:text-gray-900 {
    color: var(--x-color-gray-900);
  }
  .x\:text-orange-800 {
    color: var(--x-color-orange-800);
  }
  .x\:text-primary-600 {
    color: var(--x-color-primary-600);
  }
  .x\:text-primary-800 {
    color: var(--x-color-primary-800);
  }
  .x\:text-red-500 {
    color: var(--x-color-red-500);
  }
  .x\:text-red-900 {
    color: var(--x-color-red-900);
  }
  .x\:text-slate-50 {
    color: var(--x-color-slate-50);
  }
  .x\:text-slate-700 {
    color: var(--x-color-slate-700);
  }
  .x\:text-slate-900 {
    color: var(--x-color-slate-900);
  }
  .x\:text-yellow-900 {
    color: var(--x-color-yellow-900);
  }
  .x\:uppercase {
    text-transform: uppercase;
  }
  .x\:italic {
    font-style: italic;
  }
  .x\:no-underline {
    text-decoration-line: none;
  }
  .x\:underline {
    text-decoration-line: underline;
  }
  .x\:decoration-from-font {
    text-decoration-thickness: from-font;
  }
  .x\:subpixel-antialiased {
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
  .x\:opacity-0 {
    opacity: 0%;
  }
  .x\:opacity-25 {
    opacity: 25%;
  }
  .x\:opacity-60 {
    opacity: 60%;
  }
  .x\:opacity-75 {
    opacity: 75%;
  }
  .x\:opacity-80 {
    opacity: 80%;
  }
  .x\:opacity-100 {
    opacity: 100%;
  }
  .x\:shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-xl {
    --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:nextra-focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--x-color-primary-200);
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-ring-offset-color: var(--x-color-primary-300);
    &:focus-visible {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:where(.dark *) {
      --tw-ring-color: var(--x-color-primary-800);
    }
    &:where(.dark *) {
      --tw-ring-offset-color: var(--x-color-primary-700);
    }
  }
  .x\:ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .x\:shadow-gray-100 {
    --tw-shadow-color: var(--x-color-gray-100);
  }
  .x\:ring-gray-300 {
    --tw-ring-color: var(--x-color-gray-300);
  }
  .x\:backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--x-blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .x\:transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  }
  .x\:duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .x\:ease-in-out {
    --tw-ease: var(--x-ease-in-out);
    transition-timing-function: var(--x-ease-in-out);
  }
  .x\:ease-out {
    --tw-ease: var(--x-ease-out);
    transition-timing-function: var(--x-ease-out);
  }
  .x\:\[contain\:layout_style\] {
    contain: layout style;
  }
  .x\:outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .x\:select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .x\:\[text-underline-position\:from-font\] {
    text-underline-position: from-font;
  }
  .x\:ring-inset {
    --tw-ring-inset: inset;
  }
  .x\:\*\:origin-center {
    :is(& > *) {
      transform-origin: center;
    }
  }
  .x\:\*\:rotate-90 {
    :is(& > *) {
      rotate: 90deg;
    }
  }
  .x\:\*\:animate-\[fade-in2_1s_ease_\.2s_forwards\] {
    :is(& > *) {
      animation: fade-in2 1s ease .2s forwards;
    }
  }
  .x\:\*\:animate-\[fade-in_1s_ease_\.2s_forwards\] {
    :is(& > *) {
      animation: fade-in 1s ease .2s forwards;
    }
  }
  .x\:\*\:pt-2 {
    :is(& > *) {
      padding-top: calc(var(--x-spacing) * 2);
    }
  }
  .x\:\*\:opacity-0 {
    :is(& > *) {
      opacity: 0%;
    }
  }
  .x\:\*\:transition-transform {
    :is(& > *) {
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    }
  }
  .x\:not-first\:mt-4 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 4);
    }
  }
  .x\:not-first\:mt-5 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 5);
    }
  }
  .x\:not-first\:mt-6 {
    &:not(*:first-child) {
      margin-top: calc(var(--x-spacing) * 6);
    }
  }
  .x\:group-hover\:opacity-100 {
    &:is(:where(.x\:group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .x\:group-focus\:opacity-100 {
    &:is(:where(.x\:group):focus *) {
      opacity: 100%;
    }
  }
  .x\:placeholder\:text-gray-500 {
    &::placeholder {
      color: var(--x-color-gray-500);
    }
  }
  .x\:before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .x\:before\:inset-y-1 {
    &::before {
      content: var(--tw-content);
      inset-block: calc(var(--x-spacing) * 1);
    }
  }
  .x\:before\:start-0 {
    &::before {
      content: var(--tw-content);
      inset-inline-start: calc(var(--x-spacing) * 0);
    }
  }
  .x\:before\:w-px {
    &::before {
      content: var(--tw-content);
      width: 1px;
    }
  }
  .x\:before\:bg-gray-200 {
    &::before {
      content: var(--tw-content);
      background-color: var(--x-color-gray-200);
    }
  }
  .x\:before\:opacity-25 {
    &::before {
      content: var(--tw-content);
      opacity: 25%;
    }
  }
  .x\:before\:content-\[\"\"\] {
    &::before {
      content: var(--tw-content);
      --tw-content: "";
      content: var(--tw-content);
    }
  }
  .x\:before\:content-\[\"\#\"\] {
    &::before {
      content: var(--tw-content);
      --tw-content: "#";
      content: var(--tw-content);
    }
  }
  .x\:after\:transition-transform {
    &::after {
      content: var(--tw-content);
      transition-property: transform, translate, scale, rotate;
      transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    }
  }
  .x\:after\:duration-75 {
    &::after {
      content: var(--tw-content);
      --tw-duration: 75ms;
      transition-duration: 75ms;
    }
  }
  .x\:after\:content-\[\"→\"\] {
    &::after {
      content: var(--tw-content);
      --tw-content: "→";
      content: var(--tw-content);
    }
  }
  .x\:group-hover\:after\:translate-x-0\.5 {
    &:is(:where(.x\:group):hover *) {
      @media (hover: hover) {
        &::after {
          content: var(--tw-content);
          --tw-translate-x: calc(var(--x-spacing) * 0.5);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .x\:group-focus\:after\:translate-x-0\.5 {
    &:is(:where(.x\:group):focus *) {
      &::after {
        content: var(--tw-content);
        --tw-translate-x: calc(var(--x-spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .x\:\*\:first\:origin-\[35\%\] {
    :is(& > *) {
      &:first-child {
        transform-origin: 35%;
      }
    }
  }
  .x\:\*\:first\:rotate-180 {
    :is(& > *) {
      &:first-child {
        rotate: 180deg;
      }
    }
  }
  .x\:even\:bg-gray-100 {
    &:nth-child(even) {
      background-color: var(--x-color-gray-100);
    }
  }
  .x\:target\:animate-\[fade-in_1\.5s\] {
    &:target {
      animation: fade-in 1.5s;
    }
  }
  .x\:empty\:invisible {
    &:empty {
      visibility: hidden;
    }
  }
  .x\:focus-within\:opacity-100 {
    &:focus-within {
      opacity: 100%;
    }
  }
  .x\:hover\:border-gray-300 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--x-color-gray-300);
      }
    }
  }
  .x\:hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--x-color-gray-100);
      }
    }
  }
  .x\:hover\:bg-gray-800\/5 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--x-color-gray-800);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--x-color-gray-800) 5%, transparent);
        }
      }
    }
  }
  .x\:hover\:bg-slate-50 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--x-color-slate-50);
      }
    }
  }
  .x\:hover\:text-gray-800 {
    &:hover {
      @media (hover: hover) {
        color: var(--x-color-gray-800);
      }
    }
  }
  .x\:hover\:text-gray-900 {
    &:hover {
      @media (hover: hover) {
        color: var(--x-color-gray-900);
      }
    }
  }
  .x\:hover\:no-underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
  .x\:hover\:opacity-75 {
    &:hover {
      @media (hover: hover) {
        opacity: 75%;
      }
    }
  }
  .x\:hover\:shadow-lg {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .x\:hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .x\:hover\:shadow-gray-100 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: var(--x-color-gray-100);
      }
    }
  }
  .x\:focus-visible\:nextra-focus {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--x-color-primary-200);
      --tw-ring-offset-width: 1px;
      --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
      --tw-ring-offset-color: var(--x-color-primary-300);
      &:focus-visible {
        --tw-outline-style: none;
        outline-style: none;
      }
      &:where(.dark *) {
        --tw-ring-color: var(--x-color-primary-800);
      }
      &:where(.dark *) {
        --tw-ring-offset-color: var(--x-color-primary-700);
      }
    }
  }
  .x\:active\:shadow-sm {
    &:active {
      --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .x\:active\:shadow-gray-200 {
    &:active {
      --tw-shadow-color: var(--x-color-gray-200);
    }
  }
  .x\:aria-\[current\]\:font-medium {
    &[aria-current] {
      --tw-font-weight: var(--x-font-weight-medium);
      font-weight: var(--x-font-weight-medium);
    }
  }
  .x\:aria-\[current\]\:text-current {
    &[aria-current] {
      color: currentColor;
    }
  }
  .x\:aria-\[current\]\:subpixel-antialiased {
    &[aria-current] {
      -webkit-font-smoothing: auto;
      -moz-osx-font-smoothing: auto;
    }
  }
  .x\:data-closed\:scale-95 {
    &[data-closed] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
  .x\:data-closed\:opacity-0 {
    &[data-closed] {
      opacity: 0%;
    }
  }
  .x\:motion-reduce\:transition-none {
    @media (prefers-reduced-motion: reduce) {
      transition-property: none;
    }
  }
  .x\:contrast-more\:border {
    @media (prefers-contrast: more) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }
  .x\:contrast-more\:border-current {
    @media (prefers-contrast: more) {
      border-color: currentColor;
    }
  }
  .x\:contrast-more\:border-current\! {
    @media (prefers-contrast: more) {
      border-color: currentColor !important;
    }
  }
  .x\:contrast-more\:border-gray-600 {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-gray-600);
    }
  }
  .x\:contrast-more\:border-gray-900 {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:border-primary-500\! {
    @media (prefers-contrast: more) {
      border-color: var(--x-color-primary-500) !important;
    }
  }
  .x\:contrast-more\:border-transparent {
    @media (prefers-contrast: more) {
      border-color: transparent;
    }
  }
  .x\:contrast-more\:text-current {
    @media (prefers-contrast: more) {
      color: currentColor;
    }
  }
  .x\:contrast-more\:text-gray-700 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-700);
    }
  }
  .x\:contrast-more\:text-gray-800 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-800);
    }
  }
  .x\:contrast-more\:text-gray-900 {
    @media (prefers-contrast: more) {
      color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:text-primary-600\! {
    @media (prefers-contrast: more) {
      color: var(--x-color-primary-600) !important;
    }
  }
  .x\:contrast-more\:underline {
    @media (prefers-contrast: more) {
      text-decoration-line: underline;
    }
  }
  .x\:contrast-more\:ring-gray-900 {
    @media (prefers-contrast: more) {
      --tw-ring-color: var(--x-color-gray-900);
    }
  }
  .x\:contrast-more\:contrast-150 {
    @media (prefers-contrast: more) {
      --tw-contrast: contrast(150%);
      filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    }
  }
  .x\:contrast-more\:hover\:border-gray-900 {
    @media (prefers-contrast: more) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-gray-900);
        }
      }
    }
  }
  .x\:max-xl\:hidden {
    @media (width < 80rem) {
      display: none;
    }
  }
  .x\:max-md\:sticky {
    @media (width < 48rem) {
      position: sticky;
    }
  }
  .x\:max-md\:me-auto {
    @media (width < 48rem) {
      margin-inline-end: auto;
    }
  }
  .x\:max-md\:hidden {
    @media (width < 48rem) {
      display: none;
    }
  }
  .x\:max-md\:h-full {
    @media (width < 48rem) {
      height: 100%;
    }
  }
  .x\:max-md\:overflow-hidden {
    @media (width < 48rem) {
      overflow: hidden;
    }
  }
  .x\:max-sm\:hidden {
    @media (width < 40rem) {
      display: none;
    }
  }
  .x\:md\:-mx-8 {
    @media (width >= 48rem) {
      margin-inline: calc(var(--x-spacing) * -8);
    }
  }
  .x\:md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .x\:md\:max-h-\[min\(calc\(100vh-5rem\)\,400px\)\]\! {
    @media (width >= 48rem) {
      max-height: min(calc(100vh - 5rem), 400px) !important;
    }
  }
  .x\:md\:min-h-28 {
    @media (width >= 48rem) {
      min-height: calc(var(--x-spacing) * 28);
    }
  }
  .x\:md\:w-64 {
    @media (width >= 48rem) {
      width: calc(var(--x-spacing) * 64);
    }
  }
  .x\:md\:w-\[576px\] {
    @media (width >= 48rem) {
      width: 576px;
    }
  }
  .x\:md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .x\:md\:px-12 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--x-spacing) * 12);
    }
  }
  .x\:md\:text-lg {
    @media (width >= 48rem) {
      font-size: var(--x-text-lg);
      line-height: var(--tw-leading, var(--x-text-lg--line-height));
    }
  }
  .x\:md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--x-text-sm);
      line-height: var(--tw-leading, var(--x-text-sm--line-height));
    }
  }
  .x\:xl\:ms-\[calc\(50\%-50vw\+16rem\)\] {
    @media (width >= 80rem) {
      margin-inline-start: calc(50% - 50vw + 16rem);
    }
  }
  .x\:xl\:me-\[calc\(50\%-50vw\)\] {
    @media (width >= 80rem) {
      margin-inline-end: calc(50% - 50vw);
    }
  }
  .x\:2xl\:-mx-24 {
    @media (width >= 96rem) {
      margin-inline: calc(var(--x-spacing) * -24);
    }
  }
  .x\:ltr\:rotate-90 {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
      rotate: 90deg;
    }
  }
  .x\:ltr\:rotate-180 {
    &:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *) {
      rotate: 180deg;
    }
  }
  .x\:rtl\:-rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: calc(180deg * -1);
    }
  }
  .x\:rtl\:-rotate-270 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: calc(270deg * -1);
    }
  }
  .x\:rtl\:rotate-180 {
    &:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
      rotate: 180deg;
    }
  }
  .x\:dark\:border-blue-200\/30 {
    &:where(.dark *) {
      border-color: var(--x-color-blue-200);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-blue-200) 30%, transparent);
      }
    }
  }
  .x\:dark\:border-gray-600 {
    &:where(.dark *) {
      border-color: var(--x-color-gray-600);
    }
  }
  .x\:dark\:border-gray-700 {
    &:where(.dark *) {
      border-color: var(--x-color-gray-700);
    }
  }
  .x\:dark\:border-neutral-700 {
    &:where(.dark *) {
      border-color: var(--x-color-neutral-700);
    }
  }
  .x\:dark\:border-neutral-800 {
    &:where(.dark *) {
      border-color: var(--x-color-neutral-800);
    }
  }
  .x\:dark\:border-orange-400\/30 {
    &:where(.dark *) {
      border-color: var(--x-color-orange-400);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-orange-400) 30%, transparent);
      }
    }
  }
  .x\:dark\:border-red-200\/30 {
    &:where(.dark *) {
      border-color: var(--x-color-red-200);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-red-200) 30%, transparent);
      }
    }
  }
  .x\:dark\:border-white\/20 {
    &:where(.dark *) {
      border-color: var(--x-color-white);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-white) 20%, transparent);
      }
    }
  }
  .x\:dark\:border-yellow-200\/30 {
    &:where(.dark *) {
      border-color: var(--x-color-yellow-200);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-yellow-200) 30%, transparent);
      }
    }
  }
  .x\:dark\:bg-black {
    &:where(.dark *) {
      background-color: var(--x-color-black);
    }
  }
  .x\:dark\:bg-blue-900\/30 {
    &:where(.dark *) {
      background-color: var(--x-color-blue-900);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-blue-900) 30%, transparent);
      }
    }
  }
  .x\:dark\:bg-gray-50\/10 {
    &:where(.dark *) {
      background-color: var(--x-color-gray-50);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-gray-50) 10%, transparent);
      }
    }
  }
  .x\:dark\:bg-neutral-800 {
    &:where(.dark *) {
      background-color: var(--x-color-neutral-800);
    }
  }
  .x\:dark\:bg-neutral-900 {
    &:where(.dark *) {
      background-color: var(--x-color-neutral-900);
    }
  }
  .x\:dark\:bg-orange-400\/20 {
    &:where(.dark *) {
      background-color: var(--x-color-orange-400);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-orange-400) 20%, transparent);
      }
    }
  }
  .x\:dark\:bg-primary-100\/5 {
    &:where(.dark *) {
      background-color: var(--x-color-primary-100);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-100) 5%, transparent);
      }
    }
  }
  .x\:dark\:bg-primary-100\/10 {
    &:where(.dark *) {
      background-color: var(--x-color-primary-100);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-100) 10%, transparent);
      }
    }
  }
  .x\:dark\:bg-primary-400\/10 {
    &:where(.dark *) {
      background-color: var(--x-color-primary-400);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-400) 10%, transparent);
      }
    }
  }
  .x\:dark\:bg-primary-500\/10 {
    &:where(.dark *) {
      background-color: var(--x-color-primary-500);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-500) 10%, transparent);
      }
    }
  }
  .x\:dark\:bg-red-900\/30 {
    &:where(.dark *) {
      background-color: var(--x-color-red-900);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-red-900) 30%, transparent);
      }
    }
  }
  .x\:dark\:bg-yellow-700\/30 {
    &:where(.dark *) {
      background-color: var(--x-color-yellow-700);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-yellow-700) 30%, transparent);
      }
    }
  }
  .x\:dark\:bg-\[linear-gradient\(1deg\,\#383838\,\#212121\)\] {
    &:where(.dark *) {
      background-image: linear-gradient(1deg,#383838,#212121);
    }
  }
  .x\:dark\:text-blue-200 {
    &:where(.dark *) {
      color: var(--x-color-blue-200);
    }
  }
  .x\:dark\:text-gray-50 {
    &:where(.dark *) {
      color: var(--x-color-gray-50);
    }
  }
  .x\:dark\:text-gray-100 {
    &:where(.dark *) {
      color: var(--x-color-gray-100);
    }
  }
  .x\:dark\:text-gray-200 {
    &:where(.dark *) {
      color: var(--x-color-gray-200);
    }
  }
  .x\:dark\:text-gray-300 {
    &:where(.dark *) {
      color: var(--x-color-gray-300);
    }
  }
  .x\:dark\:text-gray-400 {
    &:where(.dark *) {
      color: var(--x-color-gray-400);
    }
  }
  .x\:dark\:text-neutral-200 {
    &:where(.dark *) {
      color: var(--x-color-neutral-200);
    }
  }
  .x\:dark\:text-neutral-400 {
    &:where(.dark *) {
      color: var(--x-color-neutral-400);
    }
  }
  .x\:dark\:text-neutral-600 {
    &:where(.dark *) {
      color: var(--x-color-neutral-600);
    }
  }
  .x\:dark\:text-orange-300 {
    &:where(.dark *) {
      color: var(--x-color-orange-300);
    }
  }
  .x\:dark\:text-primary-600 {
    &:where(.dark *) {
      color: var(--x-color-primary-600);
    }
  }
  .x\:dark\:text-red-200 {
    &:where(.dark *) {
      color: var(--x-color-red-200);
    }
  }
  .x\:dark\:text-slate-100 {
    &:where(.dark *) {
      color: var(--x-color-slate-100);
    }
  }
  .x\:dark\:text-slate-200 {
    &:where(.dark *) {
      color: var(--x-color-slate-200);
    }
  }
  .x\:dark\:text-white {
    &:where(.dark *) {
      color: var(--x-color-white);
    }
  }
  .x\:dark\:text-yellow-200 {
    &:where(.dark *) {
      color: var(--x-color-yellow-200);
    }
  }
  .x\:dark\:shadow-none {
    &:where(.dark *) {
      --tw-shadow: 0 0 #0000;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .x\:dark\:ring-neutral-700 {
    &:where(.dark *) {
      --tw-ring-color: var(--x-color-neutral-700);
    }
  }
  .x\:dark\:placeholder\:text-gray-400 {
    &:where(.dark *) {
      &::placeholder {
        color: var(--x-color-gray-400);
      }
    }
  }
  .x\:dark\:before\:bg-neutral-800 {
    &:where(.dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--x-color-neutral-800);
      }
    }
  }
  .x\:even\:dark\:bg-gray-600\/20 {
    &:nth-child(even) {
      &:where(.dark *) {
        background-color: var(--x-color-gray-600);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--x-color-gray-600) 20%, transparent);
        }
      }
    }
  }
  .x\:dark\:hover\:border-neutral-500 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-neutral-500);
        }
      }
    }
  }
  .x\:dark\:hover\:border-neutral-700 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--x-color-neutral-700);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-gray-100\/5 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-gray-100);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--x-color-gray-100) 5%, transparent);
          }
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-700 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-700);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-800 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-800);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-neutral-900 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-neutral-900);
        }
      }
    }
  }
  .x\:dark\:hover\:bg-primary-100\/5 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--x-color-primary-100);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--x-color-primary-100) 5%, transparent);
          }
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-50 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-50);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-100 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-100);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-200 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-200);
        }
      }
    }
  }
  .x\:dark\:hover\:text-gray-300 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-gray-300);
        }
      }
    }
  }
  .x\:dark\:hover\:text-neutral-50 {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--x-color-neutral-50);
        }
      }
    }
  }
  .x\:dark\:hover\:shadow-none {
    &:where(.dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow: 0 0 #0000;
          box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
        }
      }
    }
  }
  .x\:contrast-more\:dark\:border-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        border-color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-100 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-100);
      }
    }
  }
  .x\:contrast-more\:dark\:text-gray-300 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        color: var(--x-color-gray-300);
      }
    }
  }
  .x\:contrast-more\:dark\:ring-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        --tw-ring-color: var(--x-color-gray-50);
      }
    }
  }
  .x\:contrast-more\:dark\:hover\:border-gray-50 {
    @media (prefers-contrast: more) {
      &:where(.dark *) {
        &:hover {
          @media (hover: hover) {
            border-color: var(--x-color-gray-50);
          }
        }
      }
    }
  }
  .x\:print\:\[display\:none\] {
    @media print {
      display: none;
    }
  }
  .x\:print\:hidden {
    @media print {
      display: none;
    }
  }
  .x\:print\:bg-transparent {
    @media print {
      background-color: transparent;
    }
  }
  .x\:\[\&_mark\]\:bg-primary-600\/80 {
    & mark {
      background-color: var(--x-color-primary-600);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-600) 80%, transparent);
      }
    }
  }
  .x\:\[\&_mark\]\:text-white {
    & mark {
      color: var(--x-color-white);
    }
  }
  .x\:\[\&_svg\]\:text-red-500 {
    & svg {
      color: var(--x-color-red-500);
    }
  }
  .x\:\[\&\:\:-webkit-details-marker\]\:hidden {
    &::-webkit-details-marker {
      display: none;
    }
  }
  .x\:\[\&\:\:-webkit-search-cancel-button\]\:appearance-none {
    &::-webkit-search-cancel-button {
      appearance: none;
    }
  }
  .x\:\[\.nextra-banner\:not\(\[class\$\=hidden\]\)\~\&\]\:pt-\[calc\(var\(--nextra-banner-height\)\+var\(--nextra-navbar-height\)\)\] {
    .nextra-banner:not([class$=hidden])~& {
      padding-top: calc(var(--nextra-banner-height) + var(--nextra-navbar-height));
    }
  }
  .x\:max-md\:\[\.nextra-banner\:not\(\[class\$\=hidden\]\)\~\&\]\:top-\(--nextra-banner-height\) {
    @media (width < 48rem) {
      .nextra-banner:not([class$=hidden])~& {
        top: var(--nextra-banner-height);
      }
    }
  }
  .x\:\[\:is\(ol\,ul\)_\&\]\:my-3 {
    :is(ol,ul) & {
      margin-block: calc(var(--x-spacing) * 3);
    }
  }
  .x\:\[\[data-expanded\]\>summary\:first-child\>\&\]\:rotate-90 {
    [data-expanded]>summary:first-child>& {
      rotate: 90deg;
    }
  }
  .x\:hover\:\[summary\:has\(\&\)\]\:bg-transparent {
    &:hover {
      @media (hover: hover) {
        summary:has(&) {
          background-color: transparent;
        }
      }
    }
  }
}
.nextra-code span {
  background-color: var(--shiki-light-bg);
  color: var(--shiki-light);
  &:where(.dark *) {
    background-color: var(--shiki-dark-bg);
  }
  &:where(.dark *) {
    color: var(--shiki-dark);
  }
}
code.nextra-code {
  box-decoration-break: slice;
  font-feature-settings: 'rlig' 1, 'calt' 1, 'ss01' 1;
  font-size: var(--x-text-sm);
  line-height: var(--tw-leading, var(--x-text-sm--line-height));
  :not(pre) > &:not([class*='twoslash-']) {
    border-radius: var(--x-radius-md);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--x-color-black) 4%, transparent);
    }
    background-color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-black) 3%, transparent);
    }
    padding-inline: .25em;
    padding-block: calc(var(--x-spacing) * 0.5);
    font-size: .9em;
    overflow-wrap: break-word;
    &:where(.dark *) {
      border-color: var(--x-color-white);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--x-color-white) 10%, transparent);
      }
    }
    &:where(.dark *) {
      background-color: var(--x-color-white);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-white) 10%, transparent);
      }
    }
  }
}
pre code.nextra-code:not([class*='twoslash-']) {
  display: grid;
  counter-reset: line;
  &[data-line-numbers] > span {
    padding-left: calc(var(--x-spacing) * 2);
    &::before {
      counter-increment: line;
      content: counter(line);
      display: inline-block;
      min-width: 2.6rem;
      padding-right: calc(var(--x-spacing) * 4);
      text-align: right;
      color: var(--x-color-gray-500);
    }
  }
  & > span {
    padding-inline: calc(var(--x-spacing) * 4);
    &[data-highlighted-line] {
      background-color: var(--x-color-primary-600);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-600) 10%, transparent);
      }
      color: var(--x-color-primary-600) !important;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--x-color-primary-600) 80%, transparent) !important;
      }
      --tw-shadow: 2px 0 var(--tw-shadow-color, currentColor) inset;
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      &:where(.dark *) {
        background-color: var(--x-color-primary-600);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
        }
      }
    }
    [data-highlighted-chars] {
      border-radius: var(--x-radius-sm);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentColor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      --tw-ring-color: var(--x-color-primary-600);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
      }
      &:where(.dark *) {
        --tw-ring-color: var(--x-color-primary-600);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--x-color-primary-600) 40%, transparent);
        }
      }
      background-color: var(--x-color-primary-600);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--x-color-primary-600) 20%, transparent);
      }
      &:where(.dark *) {
        background-color: var(--x-color-primary-600);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--x-color-primary-600) 40%, transparent);
        }
      }
    }
  }
  html[data-nextra-word-wrap] & {
    @media (width < 48rem) {
      white-space: pre-wrap;
    }
  }
}
.nextra-copy-icon {
  animation: fade-in 0.3s ease forwards;
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
:root {
  --twoslash-border-color: #8888;
  --twoslash-underline-color: currentColor;
  --twoslash-highlighted-border: 195, 125, 13;
  --twoslash-popup-bg: #f8f8f8;
  --twoslash-popup-color: inherit;
  --twoslash-popup-shadow: rgba(0, 0, 0.08) 0px 1px 4px;
  --twoslash-docs-color: #888;
  --twoslash-docs-font: sans-serif;
  --twoslash-matched-color: inherit;
  --twoslash-unmatched-color: #888;
  --twoslash-cursor-color: #8888;
  --twoslash-error-color: 212, 86, 86;
  --twoslash-error-bg: rgba(var(--twoslash-error-color), 0.13);
  --twoslash-tag-color: 55, 114, 207;
  --twoslash-tag-warn-color: 195, 125, 13;
  --twoslash-tag-annotate-color: 27, 166, 115;
}
.dark {
  --twoslash-popup-bg: #000;
  --twoslash-border-color: #404040;
}
@media (prefers-reduced-motion: reduce) {
  .twoslash * {
    transition: none !important;
  }
}
.twoslash:hover .twoslash-hover {
  border-color: var(--twoslash-underline-color);
}
.twoslash-hover {
  border-bottom: 1px dotted transparent;
  transition-timing-function: ease;
  transition: border-color 0.3s;
  position: relative;
}
.twoslash-popup-container {
  position: absolute;
  z-index: 10;
  margin-top: calc(var(--x-spacing) * 1.5);
  display: inline-flex;
  flex-direction: column;
  border-radius: 0.25rem;
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  --tw-duration: 300ms;
  transition-duration: 300ms;
  transform: translateY(1.1em);
  background: var(--twoslash-popup-bg) !important;
  color: var(--twoslash-popup-color);
  border: 1px solid var(--twoslash-border-color);
  text-align: left;
}
.twoslash-query-presisted .twoslash-popup-container {
  z-index: 9;
  transform: translateY(1.5em);
}
.twoslash-popup-arrow {
  position: absolute;
  top: calc(var(--x-spacing) * -1);
  width: calc(var(--x-spacing) * 1.5);
  height: calc(var(--x-spacing) * 1.5);
  rotate: calc(45deg * -1);
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
  border-right-style: var(--tw-border-style);
  border-right-width: 1px;
  border-color: var(--twoslash-border-color);
  background-color: var(--twoslash-popup-bg);
  left: 1em;
  pointer-events: none;
}
.twoslash-popup-code, .twoslash-popup-docs {
  padding: 6px 8px;
}
.twoslash-popup-docs {
  font-size: var(--x-text-sm);
  line-height: var(--tw-leading, var(--x-text-sm--line-height));
  color: var(--twoslash-docs-color);
  font-family: var(--twoslash-docs-font);
  border-top: 1px solid var(--twoslash-border-color);
}
.twoslash-popup-docs-tags {
  display: flex;
  flex-direction: column;
  font-family: var(--twoslash-docs-font);
}
.twoslash-popup-docs-tags, .twoslash-popup-docs-tag-name {
  margin-right: 0.5em;
}
.twoslash-error-line {
  position: relative;
  background-color: var(--twoslash-error-bg);
  border-left: 3px solid currentColor;
  color: rgb(var(--twoslash-error-color));
  padding: 6px 12px;
  margin: 0.2em 0;
}
.twoslash-error {
  background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23c94824'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") repeat-x bottom left;
  padding-bottom: 2px;
}
.twoslash-completion-cursor {
  position: relative;
}
.twoslash-completion-cursor .twoslash-completion-list {
  position: absolute;
  top: calc(var(--x-spacing) * 1);
  left: calc(var(--x-spacing) * 0);
  border-radius: 0.25rem;
  border-style: var(--tw-border-style);
  border-width: 1px;
  transform: translate(0, 1.2em);
  background: var(--twoslash-popup-bg);
  border-color: var(--twoslash-border-color);
}
.twoslash-completion-list {
  width: calc(var(--x-spacing) * 60);
  padding-inline: calc(var(--x-spacing) * 2);
  padding-block: calc(var(--x-spacing) * 1);
}
.twoslash-completion-list::before {
  background-color: var(--twoslash-cursor-color);
  width: 2px;
  position: absolute;
  top: -1.6em;
  height: 1.4em;
  left: -1px;
  content: ' ';
}
.twoslash-completion-list li {
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 0.25em;
  line-height: 1em;
}
.twoslash-completion-list li span.twoslash-completions-unmatched {
  color: var(--twoslash-unmatched-color);
}
.twoslash-completion-list .deprecated {
  text-decoration: line-through;
  opacity: 0.5;
}
.twoslash-completion-list li span.twoslash-completions-matched {
  color: var(--twoslash-matched-color);
}
.twoslash-highlighted {
  background-color: rgba(var(--twoslash-highlighted-border), 0.13);
  border: 1px solid rgba(var(--twoslash-highlighted-border), 0.31);
  padding: 1px 2px;
  margin: -1px -3px;
  border-radius: 4px;
}
.twoslash-completion-list .twoslash-completions-icon {
  color: var(--twoslash-unmatched-color);
  width: 1em;
  flex: none;
}
.twoslash-tag-line {
  position: relative;
  background-color: rgba(var(--twoslash-tag-color), 0.13);
  border-left: 3px solid currentColor;
  color: rgb(var(--twoslash-tag-color));
  padding: 6px 10px;
  margin: 0.2em 0;
  display: flex;
  align-items: center;
  gap: 0.3em;
}
.twoslash-tag-line .twoslash-tag-icon {
  width: 1.1em;
  color: inherit;
}
.twoslash-tag-line.twoslash-tag-error-line {
  background-color: var(--twoslash-error-bg);
  color: rgb(var(--twoslash-error-color));
}
.twoslash-tag-line.twoslash-tag-warn-line {
  background-color: rgba(var(--twoslash-tag-warn-color), 0.13);
  color: rgb(var(--twoslash-tag-warn-color));
}
.twoslash-tag-line.twoslash-tag-annotate-line {
  background-color: rgba(var(--twoslash-tag-annotate-color), 0.13);
  color: rgb(var(--twoslash-tag-annotate-color));
}
:hover > .subheading-anchor {
  opacity: 100%;
}
.subheading-anchor {
  margin-inline-start: calc(var(--x-spacing) * 1);
  opacity: 0%;
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
  transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
  transition-duration: var(--tw-duration, var(--x-default-transition-duration));
  :target > &, &:focus {
    opacity: 100%;
  }
  :target > & {
    &::after {
      content: var(--tw-content);
      color: var(--x-color-gray-500);
    }
    &:where(.dark *) {
      &::after {
        content: var(--tw-content);
        color: var(--x-color-neutral-500);
      }
    }
  }
  &:after {
    padding-inline: calc(var(--x-spacing) * 1);
    --tw-content: '#';
    content: var(--tw-content);
  }
  &::after {
    content: var(--tw-content);
    color: var(--x-color-gray-400);
  }
  &:where(.dark *) {
    &::after {
      content: var(--tw-content);
      color: var(--x-color-neutral-600);
    }
  }
}
.nextra-scrollbar {
  scrollbar-width: thin;
  scrollbar-gutter: stable;
}
.no-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
  &::-webkit-scrollbar {
    display: none;
  }
}
.nextra-steps {
  h2, h3, h4, h5, h6 {
    counter-increment: var(--counter-id);
    margin-top: calc(var(--x-spacing) * 8);
    border-style: var(--tw-border-style);
    border-width: 0px;
    padding-bottom: calc(var(--x-spacing) * 0);
    font-size: var(--x-text-2xl);
    line-height: var(--tw-leading, var(--x-text-2xl--line-height));
    --tw-font-weight: var(--x-font-weight-semibold);
    font-weight: var(--x-font-weight-semibold);
    --tw-tracking: var(--x-tracking-tight);
    letter-spacing: var(--x-tracking-tight);
    &::before {
      content: var(--tw-content);
      background-color: var(--x-color-gray-100);
    }
    &:where(.dark *) {
      &::before {
        content: var(--tw-content);
        background-color: var(--x-color-neutral-800);
      }
    }
    &:before {
      position: absolute;
      width: 33px;
      height: 33px;
      border-style: var(--tw-border-style);
      border-width: 4px;
      border-color: var(--x-color-nextra-bg);
      border-radius: calc(infinity * 1px);
      text-align: center;
      text-indent: -1px;
      font-size: var(--x-text-base);
      line-height: var(--tw-leading, var(--x-text-base--line-height));
      --tw-font-weight: var(--x-font-weight-normal);
      font-weight: var(--x-font-weight-normal);
      color: var(--x-color-neutral-400);
      margin-inline-start: -41px;
      content: counter(var(--counter-id));
    }
  }
}
.nextra-cards {
  grid-template-columns: repeat( auto-fill, minmax(max(250px, calc((100% - 1rem * 2) / var(--rows))), 1fr) );
}
.nextra-card {
  img {
    -webkit-user-select: none;
    user-select: none;
  }
  & > span > svg {
    height: auto;
    width: calc(var(--x-spacing) * 6);
    flex-shrink: 0;
    color: var(--x-color-black);
    @supports (color: color-mix(in lab, red, red)) {
      color: color-mix(in oklab, var(--x-color-black) 30%, transparent);
    }
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--x-default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--x-default-transition-duration));
    &:where(.dark *) {
      color: var(--x-color-white);
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, var(--x-color-white) 40%, transparent);
      }
    }
  }
  &:hover > span > svg {
    color: currentColor !important;
  }
  p {
    margin-top: calc(var(--x-spacing) * 2);
  }
}
[data-rmiz-ghost] {
  position: absolute;
  pointer-events: none;
}
[data-rmiz-btn-zoom], [data-rmiz-btn-unzoom] {
  width: calc(var(--x-spacing) * 10);
  height: calc(var(--x-spacing) * 10);
  border-radius: calc(infinity * 1px);
  background-color: var(--x-color-black);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(in oklab, var(--x-color-black) 70%, transparent);
  }
  color: var(--x-color-white);
  &:where(.dark *) {
    background-color: var(--x-color-white);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--x-color-white) 70%, transparent);
    }
  }
  &:where(.dark *) {
    color: var(--x-color-black);
  }
  outline-offset: 2px;
  padding: 9px;
  touch-action: manipulation;
  appearance: none;
}
[data-rmiz-btn-zoom] {
  position: absolute;
  inset: 10px 10px auto auto;
  cursor: zoom-in;
  &:not(:focus):not(:active) {
    position: absolute;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    pointer-events: none;
    white-space: nowrap;
    width: 1px;
  }
}
[data-rmiz-btn-unzoom] {
  position: absolute;
  inset: 20px 20px auto auto;
  cursor: zoom-out;
  z-index: 1;
}
[data-rmiz-content='found'] {
  img, svg, [role='img'], [data-zoom] {
    cursor: zoom-in;
  }
}
[data-rmiz-modal]::backdrop {
  display: none;
}
[data-rmiz-modal][open] {
  position: fixed;
  width: 100vw;
  width: 100dvw;
  height: 100vh;
  height: 100dvh;
  max-width: none;
  max-height: none;
  margin: 0;
  padding: 0;
  border: 0;
  background: transparent;
  overflow: hidden;
}
[data-rmiz-modal-overlay] {
  position: absolute;
  inset: 0;
  transition: opacity 0.3s;
  background: rgba(var(--nextra-bg), 0.8);
}
[data-rmiz-modal-overlay='hidden'] {
  opacity: 0%;
}
[data-rmiz-modal-overlay='visible'] {
  opacity: 100%;
}
[data-rmiz-modal-content] {
  position: relative;
  width: 100%;
  height: 100%;
}
[data-rmiz-modal-img] {
  position: absolute;
  cursor: zoom-out;
  image-rendering: high-quality;
  transform-origin: top left;
  transition: transform 0.3s;
}
@media (prefers-reduced-motion: reduce) {
  [data-rmiz-modal-overlay], [data-rmiz-modal-img] {
    transition-duration: 0.01ms;
  }
}
.nextra-hamburger svg {
  g, path {
    @media (prefers-reduced-motion: reduce) {
      transition-property: none !important;
    }
  }
  --animation: transform 0.15s cubic-bezier(0.25, 1, 0.5, 1);
  g {
    transform-origin: center;
    transition: var(--animation);
  }
  path {
    opacity: 1;
    transition: var(--animation) 0.15s, opacity 0.15s ease 0.15s;
  }
  &.open {
    path {
      transition: var(--animation), opacity 0s ease 0.15s;
    }
    & > path {
      opacity: 0;
    }
    g {
      transition: var(--animation) 0.15s;
      &:nth-of-type(1) {
        transform: rotate(45deg);
        path {
          transform: translate3d(0, 6px, 0);
        }
      }
      &:nth-of-type(2) {
        transform: rotate(-45deg);
        path {
          transform: translate3d(0, -6px, 0);
        }
      }
    }
  }
}
article.nextra-body-typesetting-article {
  font-size: 17px;
  font-feature-settings: 'rlig' 1, 'calt' 1;
  h1 {
    margin-top: calc(var(--x-spacing) * 6);
    margin-bottom: calc(var(--x-spacing) * 4);
    text-align: center;
    font-size: 2.5rem;
  }
  h2 {
    --tw-border-style: none;
    border-style: none;
  }
  a {
    text-decoration-line: none;
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  p {
    --tw-leading: calc(var(--x-spacing) * 8);
    line-height: calc(var(--x-spacing) * 8);
  }
  code {
    --tw-border-style: none;
    border-style: none;
    &:where(.dark *) {
      background-color: var(--x-color-neutral-700);
    }
  }
  pre code {
    &:where(.dark *) {
      background-color: transparent;
    }
  }
  .subheading-anchor {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: none;
      }
    }
  }
}
html {
  --nextra-navbar-height: 64px;
  --nextra-menu-height: 3.75rem;
  font-size: var(--x-text-base);
  line-height: var(--tw-leading, var(--x-text-base--line-height));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-feature-settings: 'rlig' 1, 'calt' 1, 'ss01' 1;
  -webkit-tap-highlight-color: transparent;
  &:not(:has(*:focus)) {
    scroll-padding-top: var(--nextra-navbar-height);
  }
}
.contains-task-list {
  margin-top: calc(var(--x-spacing) * 6);
  input[type='checkbox'] {
    margin-inline-end: calc(var(--x-spacing) * 1);
  }
}
.footnotes a[data-footnote-backref] {
  font-family: initial;
}
@keyframes fade-in2 {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.nextra-border {
  border-color: var(--x-color-gray-200);
  @media (prefers-contrast: more) {
    border-color: var(--x-color-neutral-400) !important;
  }
  &:where(.dark *) {
    border-color: var(--x-color-neutral-800);
  }
}
.nextra-mask {
  mask-image: linear-gradient(to bottom, transparent, #000 20px, transparent 100%), linear-gradient(to top, transparent, #000 20px, transparent 100%);
  @media (prefers-contrast: more) {
    mask-image: none;
  }
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
:root {
  --radius: 0.625rem;
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: var(--color-blue-500);
  --primary-foreground: oklch(0.985 0 0);
  --secondary: var(--color-red-500);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.97 0 0);
  --accent-foreground: oklch(0.205 0 0);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.922 0 0);
  --input: oklch(0.922 0 0);
  --ring: oklch(0.708 0 0);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: oklch(0.205 0 0);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.97 0 0);
  --sidebar-accent-foreground: oklch(0.205 0 0);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: oklch(0.708 0 0);
  --foreground: oklch(0.145 0 0);
  --background: oklch(0.9851 0 0);
}
.dark {
  --foreground: oklch(0.985 0 0);
  --background: oklch(0.1776 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: var(--color-blue-500);
  --primary-foreground: oklch(0.205 0 0);
  --secondary: var(--color-red-500);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.269 0 0);
  --accent-foreground: oklch(0.985 0 0);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(1 0 0 / 10%);
  --input: oklch(1 0 0 / 15%);
  --ring: oklch(0.556 0 0);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: oklch(0.488 0.243 264.376);
  --sidebar-primary-foreground: oklch(0.985 0 0);
  --sidebar-accent: oklch(0.269 0 0);
  --sidebar-accent-foreground: oklch(0.985 0 0);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: oklch(0.556 0 0);
}
@layer base {
  * {
    border-color: var(--border);
    outline-color: var(--ring);
    @supports (color: color-mix(in lab, red, red)) {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }
  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}
body.page-home,
body.page-pt-home,
body.page-en-home,
body.page-es-home,
body.page-grao-mestre-kobi,
body.page-pt-grao-mestre-kobi,
body.page-en-grao-mestre-kobi,
body.page-es-grao-mestre-kobi {
  .x\:mx-auto.x\:flex.x\:max-w-\(--nextra-content-width\) > div.x\:w-64 {
    display: none;
  }
}
body.page-pt-contato {
  .nextra-toc {
    display: none;
  }
}
.searchinput {
  input {
    width: 100%;
  }
}
lite-youtube {
  margin-inline: auto;
}
.nextra-search-results {
  background-color: var(--x-color-nextra-bg);
  @supports (color: color-mix(in lab, red, red)) {
    background-color: color-mix(
    in oklab,
    var(--x-color-nextra-bg) 100%,
    transparent
  );
  }
}
.nextra-breadcrumb {
  margin-bottom: calc(var(--spacing) * 6);
}
.carousel {
  .slide {
    transition: opacity 0.2s ease-in-out;
  }
  .slide:not(.is-snapped) {
    opacity: 0.4;
  }
  .is-snapped {
    transform: scale(1.05);
    z-index: 10;
  }
}
.page-pt-krav-maga-midia {
  h2::before {
    content: attr(data-year);
  }
  h3 {
    margin-block: calc(var(--spacing) * 8);
  }
}
.page-pt-krav-maga-faixas {
  h2 {
    clear: both;
  }
}
p:has(+ ul) {
  margin-bottom: 0;
}
p + ul {
  margin-top: 0;
}
.nextra-navbar {
  z-index: 22 !important;
}
.nextra-mobile-nav {
  z-index: 21 !important;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-content: "";
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
    }
  }
}

