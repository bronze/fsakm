"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unist-util-remove@4.0.0";
exports.ids = ["vendor-chunks/unist-util-remove@4.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"(rsc)/./node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js\");\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\n\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * `tree` itself is never tested.\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @overload\n * @param {Node} node\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @overload\n * @param {Node} node\n * @param {Options | null | undefined} options\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @param {Node} tree\n *   Tree to change.\n * @param {Options | Test} options\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {undefined}\n *   Nothing.\n */\nfunction remove(tree, options, test) {\n  const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test || options)\n  let cascade = true\n\n  if (\n    options &&\n    typeof options === 'object' &&\n    'cascade' in options &&\n    typeof options.cascade === 'boolean'\n  ) {\n    cascade = options.cascade\n  }\n\n  preorder(tree)\n\n  /**\n   * Check and remove nodes recursively in preorder.\n   * For each composite node, modify its children array in-place.\n   *\n   * @param {Node} node\n   * @param {number | undefined} [index]\n   * @param {Parent | undefined} [parent]\n   * @returns {boolean}\n   */\n  function preorder(node, index, parent) {\n    if (node !== tree && is(node, index, parent)) {\n      return false\n    }\n\n    if ('children' in node && Array.isArray(node.children)) {\n      const nodeAsParent = /** @type {Parent} */ (node)\n      const children = nodeAsParent.children\n      let oldChildIndex = -1\n      let newChildIndex = 0\n\n      if (children.length > 0) {\n        // Move all living children to the beginning of the children array.\n        while (++oldChildIndex < children.length) {\n          if (preorder(children[oldChildIndex], oldChildIndex, nodeAsParent)) {\n            children[newChildIndex++] = children[oldChildIndex]\n          }\n        }\n\n        // Cascade delete.\n        if (node !== tree && cascade && !newChildIndex) {\n          return false\n        }\n\n        // Drop other nodes.\n        children.length = newChildIndex\n      }\n    }\n\n    return true\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vdW5pc3QtdXRpbC1yZW1vdmVANC4wLjAvbm9kZV9tb2R1bGVzL3VuaXN0LXV0aWwtcmVtb3ZlL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0EsYUFBYSxzQkFBc0I7QUFDbkMsYUFBYSx3QkFBd0I7QUFDckMsYUFBYSw4QkFBOEI7QUFDM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYyw0QkFBNEI7QUFDMUM7QUFDQTtBQUNBOztBQUVxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsTUFBTTtBQUNqQixXQUFXLE1BQU07QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyw0QkFBNEI7QUFDdkMsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDTztBQUNQLGFBQWEsc0RBQU87QUFDcEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsTUFBTTtBQUNuQixhQUFhLG9CQUFvQjtBQUNqQyxhQUFhLG9CQUFvQjtBQUNqQyxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL2Jyb256ZS9jb2RpbmcvZnNha20vbm9kZV9tb2R1bGVzLy5wbnBtL3VuaXN0LXV0aWwtcmVtb3ZlQDQuMC4wL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS9saWIvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdCcpLk5vZGV9IE5vZGVcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0JykuUGFyZW50fSBQYXJlbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJ3VuaXN0LXV0aWwtaXMnKS5UZXN0fSBUZXN0XG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKiBAcHJvcGVydHkge2Jvb2xlYW4gfCBudWxsIHwgdW5kZWZpbmVkfSBbY2FzY2FkZT10cnVlXVxuICogICBXaGV0aGVyIHRvIGRyb3AgcGFyZW50IG5vZGVzIGlmIHRoZXkgaGFkIGNoaWxkcmVuLCBidXQgYWxsIHRoZWlyIGNoaWxkcmVuXG4gKiAgIHdlcmUgZmlsdGVyZWQgb3V0IChkZWZhdWx0OiBgdHJ1ZWApLlxuICovXG5cbmltcG9ydCB7Y29udmVydH0gZnJvbSAndW5pc3QtdXRpbC1pcydcblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGdpdmVuIGB0cmVlYCBieSByZW1vdmluZyBhbGwgbm9kZXMgdGhhdCBwYXNzIGB0ZXN0YC5cbiAqXG4gKiBgdHJlZWAgaXRzZWxmIGlzIG5ldmVyIHRlc3RlZC5cbiAqIFRoZSB0cmVlIGlzIHdhbGtlZCBpbiBwcmVvcmRlciAoTkxSKSwgdmlzaXRpbmcgdGhlIG5vZGUgaXRzZWxmLCB0aGVuIGl0c1xuICogaGVhZCwgZXRjLlxuICpcbiAqIEBvdmVybG9hZFxuICogQHBhcmFtIHtOb2RlfSBub2RlXG4gKiBAcGFyYW0ge1Rlc3R9IFt0ZXN0XVxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqXG4gKiBAb3ZlcmxvYWRcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHBhcmFtIHtPcHRpb25zIHwgbnVsbCB8IHVuZGVmaW5lZH0gb3B0aW9uc1xuICogQHBhcmFtIHtUZXN0fSBbdGVzdF1cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKlxuICogQHBhcmFtIHtOb2RlfSB0cmVlXG4gKiAgIFRyZWUgdG8gY2hhbmdlLlxuICogQHBhcmFtIHtPcHRpb25zIHwgVGVzdH0gb3B0aW9uc1xuICogICBDb25maWd1cmF0aW9uIChvcHRpb25hbCkuXG4gKiBAcGFyYW0ge1Rlc3R9IFt0ZXN0XVxuICogICBgdW5pc3QtdXRpbC1pc2AgY29tcGF0aWJsZSB0ZXN0LlxuICogQHJldHVybnMge3VuZGVmaW5lZH1cbiAqICAgTm90aGluZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZSh0cmVlLCBvcHRpb25zLCB0ZXN0KSB7XG4gIGNvbnN0IGlzID0gY29udmVydCh0ZXN0IHx8IG9wdGlvbnMpXG4gIGxldCBjYXNjYWRlID0gdHJ1ZVxuXG4gIGlmIChcbiAgICBvcHRpb25zICYmXG4gICAgdHlwZW9mIG9wdGlvbnMgPT09ICdvYmplY3QnICYmXG4gICAgJ2Nhc2NhZGUnIGluIG9wdGlvbnMgJiZcbiAgICB0eXBlb2Ygb3B0aW9ucy5jYXNjYWRlID09PSAnYm9vbGVhbidcbiAgKSB7XG4gICAgY2FzY2FkZSA9IG9wdGlvbnMuY2FzY2FkZVxuICB9XG5cbiAgcHJlb3JkZXIodHJlZSlcblxuICAvKipcbiAgICogQ2hlY2sgYW5kIHJlbW92ZSBub2RlcyByZWN1cnNpdmVseSBpbiBwcmVvcmRlci5cbiAgICogRm9yIGVhY2ggY29tcG9zaXRlIG5vZGUsIG1vZGlmeSBpdHMgY2hpbGRyZW4gYXJyYXkgaW4tcGxhY2UuXG4gICAqXG4gICAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICAgKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gW2luZGV4XVxuICAgKiBAcGFyYW0ge1BhcmVudCB8IHVuZGVmaW5lZH0gW3BhcmVudF1cbiAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAqL1xuICBmdW5jdGlvbiBwcmVvcmRlcihub2RlLCBpbmRleCwgcGFyZW50KSB7XG4gICAgaWYgKG5vZGUgIT09IHRyZWUgJiYgaXMobm9kZSwgaW5kZXgsIHBhcmVudCkpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGlmICgnY2hpbGRyZW4nIGluIG5vZGUgJiYgQXJyYXkuaXNBcnJheShub2RlLmNoaWxkcmVuKSkge1xuICAgICAgY29uc3Qgbm9kZUFzUGFyZW50ID0gLyoqIEB0eXBlIHtQYXJlbnR9ICovIChub2RlKVxuICAgICAgY29uc3QgY2hpbGRyZW4gPSBub2RlQXNQYXJlbnQuY2hpbGRyZW5cbiAgICAgIGxldCBvbGRDaGlsZEluZGV4ID0gLTFcbiAgICAgIGxldCBuZXdDaGlsZEluZGV4ID0gMFxuXG4gICAgICBpZiAoY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICAvLyBNb3ZlIGFsbCBsaXZpbmcgY2hpbGRyZW4gdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgY2hpbGRyZW4gYXJyYXkuXG4gICAgICAgIHdoaWxlICgrK29sZENoaWxkSW5kZXggPCBjaGlsZHJlbi5sZW5ndGgpIHtcbiAgICAgICAgICBpZiAocHJlb3JkZXIoY2hpbGRyZW5bb2xkQ2hpbGRJbmRleF0sIG9sZENoaWxkSW5kZXgsIG5vZGVBc1BhcmVudCkpIHtcbiAgICAgICAgICAgIGNoaWxkcmVuW25ld0NoaWxkSW5kZXgrK10gPSBjaGlsZHJlbltvbGRDaGlsZEluZGV4XVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIENhc2NhZGUgZGVsZXRlLlxuICAgICAgICBpZiAobm9kZSAhPT0gdHJlZSAmJiBjYXNjYWRlICYmICFuZXdDaGlsZEluZGV4KSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICAvLyBEcm9wIG90aGVyIG5vZGVzLlxuICAgICAgICBjaGlsZHJlbi5sZW5ndGggPSBuZXdDaGlsZEluZGV4XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRydWVcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js\n");

/***/ })

};
;