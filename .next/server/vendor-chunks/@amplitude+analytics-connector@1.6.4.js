"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@amplitude+analytics-connector@1.6.4";
exports.ids = ["vendor-chunks/@amplitude+analytics-connector@1.6.4"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@amplitude+analytics-connector@1.6.4/node_modules/@amplitude/analytics-connector/dist/analytics-connector.esm.js":
/*!*********************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@amplitude+analytics-connector@1.6.4/node_modules/@amplitude/analytics-connector/dist/analytics-connector.esm.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalyticsConnector: () => (/* binding */ AnalyticsConnector)\n/* harmony export */ });\nvar ApplicationContextProviderImpl = /** @class */ (function () {\n    function ApplicationContextProviderImpl() {\n    }\n    ApplicationContextProviderImpl.prototype.getApplicationContext = function () {\n        return {\n            versionName: this.versionName,\n            language: getLanguage(),\n            platform: 'Web',\n            os: undefined,\n            deviceModel: undefined,\n        };\n    };\n    return ApplicationContextProviderImpl;\n}());\nvar getLanguage = function () {\n    return ((typeof navigator !== 'undefined' &&\n        ((navigator.languages && navigator.languages[0]) ||\n            navigator.language)) ||\n        '');\n};\n\nvar EventBridgeImpl = /** @class */ (function () {\n    function EventBridgeImpl() {\n        this.queue = [];\n    }\n    EventBridgeImpl.prototype.logEvent = function (event) {\n        if (!this.receiver) {\n            if (this.queue.length < 512) {\n                this.queue.push(event);\n            }\n        }\n        else {\n            this.receiver(event);\n        }\n    };\n    EventBridgeImpl.prototype.setEventReceiver = function (receiver) {\n        this.receiver = receiver;\n        if (this.queue.length > 0) {\n            this.queue.forEach(function (event) {\n                receiver(event);\n            });\n            this.queue = [];\n        }\n    };\n    return EventBridgeImpl;\n}());\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar isEqual = function (obj1, obj2) {\n    var e_1, _a;\n    var primitive = ['string', 'number', 'boolean', 'undefined'];\n    var typeA = typeof obj1;\n    var typeB = typeof obj2;\n    if (typeA !== typeB) {\n        return false;\n    }\n    try {\n        for (var primitive_1 = __values(primitive), primitive_1_1 = primitive_1.next(); !primitive_1_1.done; primitive_1_1 = primitive_1.next()) {\n            var p = primitive_1_1.value;\n            if (p === typeA) {\n                return obj1 === obj2;\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (primitive_1_1 && !primitive_1_1.done && (_a = primitive_1.return)) _a.call(primitive_1);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    // check null\n    if (obj1 == null && obj2 == null) {\n        return true;\n    }\n    else if (obj1 == null || obj2 == null) {\n        return false;\n    }\n    // if got here - objects\n    if (obj1.length !== obj2.length) {\n        return false;\n    }\n    //check if arrays\n    var isArrayA = Array.isArray(obj1);\n    var isArrayB = Array.isArray(obj2);\n    if (isArrayA !== isArrayB) {\n        return false;\n    }\n    if (isArrayA && isArrayB) {\n        //arrays\n        for (var i = 0; i < obj1.length; i++) {\n            if (!isEqual(obj1[i], obj2[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        //objects\n        var sorted1 = Object.keys(obj1).sort();\n        var sorted2 = Object.keys(obj2).sort();\n        if (!isEqual(sorted1, sorted2)) {\n            return false;\n        }\n        //compare object values\n        var result_1 = true;\n        Object.keys(obj1).forEach(function (key) {\n            if (!isEqual(obj1[key], obj2[key])) {\n                result_1 = false;\n            }\n        });\n        return result_1;\n    }\n    return true;\n};\n\nvar ID_OP_SET = '$set';\nvar ID_OP_UNSET = '$unset';\nvar ID_OP_CLEAR_ALL = '$clearAll';\n// Polyfill for Object.entries\nif (!Object.entries) {\n    Object.entries = function (obj) {\n        var ownProps = Object.keys(obj);\n        var i = ownProps.length;\n        var resArray = new Array(i);\n        while (i--) {\n            resArray[i] = [ownProps[i], obj[ownProps[i]]];\n        }\n        return resArray;\n    };\n}\nvar IdentityStoreImpl = /** @class */ (function () {\n    function IdentityStoreImpl() {\n        this.identity = { userProperties: {} };\n        this.listeners = new Set();\n    }\n    IdentityStoreImpl.prototype.editIdentity = function () {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var self = this;\n        var actingUserProperties = __assign({}, this.identity.userProperties);\n        var actingIdentity = __assign(__assign({}, this.identity), { userProperties: actingUserProperties });\n        return {\n            setUserId: function (userId) {\n                actingIdentity.userId = userId;\n                return this;\n            },\n            setDeviceId: function (deviceId) {\n                actingIdentity.deviceId = deviceId;\n                return this;\n            },\n            setUserProperties: function (userProperties) {\n                actingIdentity.userProperties = userProperties;\n                return this;\n            },\n            setOptOut: function (optOut) {\n                actingIdentity.optOut = optOut;\n                return this;\n            },\n            updateUserProperties: function (actions) {\n                var e_1, _a, e_2, _b, e_3, _c;\n                var actingProperties = actingIdentity.userProperties || {};\n                try {\n                    for (var _d = __values(Object.entries(actions)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var _f = __read(_e.value, 2), action = _f[0], properties = _f[1];\n                        switch (action) {\n                            case ID_OP_SET:\n                                try {\n                                    for (var _g = (e_2 = void 0, __values(Object.entries(properties))), _h = _g.next(); !_h.done; _h = _g.next()) {\n                                        var _j = __read(_h.value, 2), key = _j[0], value = _j[1];\n                                        actingProperties[key] = value;\n                                    }\n                                }\n                                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                                finally {\n                                    try {\n                                        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n                                    }\n                                    finally { if (e_2) throw e_2.error; }\n                                }\n                                break;\n                            case ID_OP_UNSET:\n                                try {\n                                    for (var _k = (e_3 = void 0, __values(Object.keys(properties))), _l = _k.next(); !_l.done; _l = _k.next()) {\n                                        var key = _l.value;\n                                        delete actingProperties[key];\n                                    }\n                                }\n                                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                                finally {\n                                    try {\n                                        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n                                    }\n                                    finally { if (e_3) throw e_3.error; }\n                                }\n                                break;\n                            case ID_OP_CLEAR_ALL:\n                                actingProperties = {};\n                                break;\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                actingIdentity.userProperties = actingProperties;\n                return this;\n            },\n            commit: function () {\n                self.setIdentity(actingIdentity);\n                return this;\n            },\n        };\n    };\n    IdentityStoreImpl.prototype.getIdentity = function () {\n        return __assign({}, this.identity);\n    };\n    IdentityStoreImpl.prototype.setIdentity = function (identity) {\n        var originalIdentity = __assign({}, this.identity);\n        this.identity = __assign({}, identity);\n        if (!isEqual(originalIdentity, this.identity)) {\n            this.listeners.forEach(function (listener) {\n                listener(identity);\n            });\n        }\n    };\n    IdentityStoreImpl.prototype.addIdentityListener = function (listener) {\n        this.listeners.add(listener);\n    };\n    IdentityStoreImpl.prototype.removeIdentityListener = function (listener) {\n        this.listeners.delete(listener);\n    };\n    return IdentityStoreImpl;\n}());\n\nvar safeGlobal = typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n        ? global\n        : self;\n\nvar AnalyticsConnector = /** @class */ (function () {\n    function AnalyticsConnector() {\n        this.identityStore = new IdentityStoreImpl();\n        this.eventBridge = new EventBridgeImpl();\n        this.applicationContextProvider = new ApplicationContextProviderImpl();\n    }\n    AnalyticsConnector.getInstance = function (instanceName) {\n        if (!safeGlobal['analyticsConnectorInstances']) {\n            safeGlobal['analyticsConnectorInstances'] = {};\n        }\n        if (!safeGlobal['analyticsConnectorInstances'][instanceName]) {\n            safeGlobal['analyticsConnectorInstances'][instanceName] =\n                new AnalyticsConnector();\n        }\n        return safeGlobal['analyticsConnectorInstances'][instanceName];\n    };\n    return AnalyticsConnector;\n}());\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@amplitude+analytics-connector@1.6.4/node_modules/@amplitude/analytics-connector/dist/analytics-connector.esm.js\n");

/***/ })

};
;