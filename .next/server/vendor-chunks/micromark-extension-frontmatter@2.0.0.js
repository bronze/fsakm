"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/micromark-extension-frontmatter@2.0.0";
exports.ids = ["vendor-chunks/micromark-extension-frontmatter@2.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/syntax.js":
/*!*********************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/syntax.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   frontmatter: () => (/* binding */ frontmatter)\n/* harmony export */ });\n/* harmony import */ var micromark_util_character__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! micromark-util-character */ \"(rsc)/./node_modules/.pnpm/micromark-util-character@2.1.1/node_modules/micromark-util-character/dev/index.js\");\n/* harmony import */ var micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! micromark-util-symbol */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@2.0.1/node_modules/micromark-util-symbol/lib/types.js\");\n/* harmony import */ var micromark_util_symbol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! micromark-util-symbol */ \"(rsc)/./node_modules/.pnpm/micromark-util-symbol@2.0.1/node_modules/micromark-util-symbol/lib/codes.js\");\n/* harmony import */ var _to_matters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./to-matters.js */ \"(rsc)/./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/to-matters.js\");\n/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef {import('./to-matters.js').Info} Info\n * @typedef {import('./to-matters.js').Matter} Matter\n * @typedef {import('./to-matters.js').Options} Options\n */\n\n\n\n\n\n/**\n * Create an extension for `micromark` to enable frontmatter syntax.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration (default: `'yaml'`).\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable frontmatter syntax.\n */\nfunction frontmatter(options) {\n  const matters = (0,_to_matters_js__WEBPACK_IMPORTED_MODULE_0__.toMatters)(options)\n  /** @type {ConstructRecord} */\n  const flow = {}\n  let index = -1\n\n  while (++index < matters.length) {\n    const matter = matters[index]\n    const code = fence(matter, 'open').charCodeAt(0)\n    const construct = createConstruct(matter)\n    const existing = flow[code]\n\n    if (Array.isArray(existing)) {\n      existing.push(construct)\n    } else {\n      // Never a single object, always an array.\n      flow[code] = [construct]\n    }\n  }\n\n  return {flow}\n}\n\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\nfunction createConstruct(matter) {\n  const anywhere = matter.anywhere\n  const frontmatterType = /** @type {TokenType} */ (matter.type)\n  const fenceType = /** @type {TokenType} */ (frontmatterType + 'Fence')\n  const sequenceType = /** @type {TokenType} */ (fenceType + 'Sequence')\n  const valueType = /** @type {TokenType} */ (frontmatterType + 'Value')\n  const closingFenceConstruct = {tokenize: tokenizeClosingFence, partial: true}\n\n  /**\n   * Fence to look for.\n   *\n   * @type {string}\n   */\n  let buffer\n  let bufferIndex = 0\n\n  return {tokenize: tokenizeFrontmatter, concrete: true}\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n\n    return start\n\n    /**\n     * Start of frontmatter.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      const position = self.now()\n\n      if (\n        // Indent not allowed.\n        position.column === 1 &&\n        // Normally, only allowed in first line.\n        (position.line === 1 || anywhere)\n      ) {\n        buffer = fence(matter, 'open')\n        bufferIndex = 0\n\n        if (code === buffer.charCodeAt(bufferIndex)) {\n          effects.enter(frontmatterType)\n          effects.enter(fenceType)\n          effects.enter(sequenceType)\n          return openSequence(code)\n        }\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownSpace)(code)) {\n          effects.enter(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)\n          return openSequenceWhitespace(code)\n        }\n\n        return openAfter(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return openSequence\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after open sequence.\n     *\n     * ```markdown\n     * > | ---␠\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequenceWhitespace(code) {\n      if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownSpace)(code)) {\n        effects.consume(code)\n        return openSequenceWhitespace\n      }\n\n      effects.exit(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)\n      return openAfter(code)\n    }\n\n    /**\n     * After open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openAfter(code) {\n      if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\n        effects.exit(fenceType)\n        effects.enter(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\n        effects.consume(code)\n        effects.exit(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\n        // Get ready for closing fence.\n        buffer = fence(matter, 'close')\n        bufferIndex = 0\n        return effects.attempt(closingFenceConstruct, after, contentStart)\n      }\n\n      // EOF is not okay.\n      return nok(code)\n    }\n\n    /**\n     * Start of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentStart(code) {\n      if (code === micromark_util_symbol__WEBPACK_IMPORTED_MODULE_3__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\n        return contentEnd(code)\n      }\n\n      effects.enter(valueType)\n      return contentInside(code)\n    }\n\n    /**\n     * In content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentInside(code) {\n      if (code === micromark_util_symbol__WEBPACK_IMPORTED_MODULE_3__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\n        effects.exit(valueType)\n        return contentEnd(code)\n      }\n\n      effects.consume(code)\n      return contentInside\n    }\n\n    /**\n     * End of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *                   ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentEnd(code) {\n      // Require a closing fence.\n      if (code === micromark_util_symbol__WEBPACK_IMPORTED_MODULE_3__.codes.eof) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\n      effects.consume(code)\n      effects.exit(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.lineEnding)\n      return effects.attempt(closingFenceConstruct, after, contentStart)\n    }\n\n    /**\n     * After frontmatter.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      // `code` must be eol/eof.\n      effects.exit(frontmatterType)\n      return ok(code)\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let bufferIndex = 0\n\n    return closeStart\n\n    /**\n     * Start of close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeStart(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return closeSequence(code)\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n\n        if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownSpace)(code)) {\n          effects.enter(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)\n          return closeSequenceWhitespace(code)\n        }\n\n        return closeAfter(code)\n      }\n\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return closeSequence\n      }\n\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after close sequence.\n     *\n     * ```markdown\n     * > | ---\n     *   | title: \"Venus\"\n     *   | ---␠\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequenceWhitespace(code) {\n      if ((0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownSpace)(code)) {\n        effects.consume(code)\n        return closeSequenceWhitespace\n      }\n\n      effects.exit(micromark_util_symbol__WEBPACK_IMPORTED_MODULE_2__.types.whitespace)\n      return closeAfter(code)\n    }\n\n    /**\n     * After close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeAfter(code) {\n      if (code === micromark_util_symbol__WEBPACK_IMPORTED_MODULE_3__.codes.eof || (0,micromark_util_character__WEBPACK_IMPORTED_MODULE_1__.markdownLineEnding)(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'close' | 'open'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info | string} schema\n * @param {'close' | 'open'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/syntax.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/to-matters.js":
/*!*************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/to-matters.js ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toMatters: () => (/* binding */ toMatters)\n/* harmony export */ });\n/* harmony import */ var fault__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fault */ \"(rsc)/./node_modules/.pnpm/fault@2.0.1/node_modules/fault/index.js\");\n/**\n * @typedef {'toml' | 'yaml'} Preset\n *   Known name of a frontmatter style.\n *\n * @typedef Info\n *   Sequence.\n *\n *   Depending on how this structure is used, it reflects a marker or a fence.\n * @property {string} close\n *   Closing.\n * @property {string} open\n *   Opening.\n *\n * @typedef MatterProps\n *   Fields describing a kind of matter.\n * @property {string} type\n *   Node type to tokenize as.\n * @property {boolean | null | undefined} [anywhere=false]\n *   Whether matter can be found anywhere in the document, normally, only matter\n *   at the start of the document is recognized.\n *\n *   > 👉 **Note**: using this is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n * @typedef MarkerProps\n *   Marker configuration.\n * @property {Info | string} marker\n *   Character repeated 3 times, used as complete fences.\n *\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n *   Pass `open` and `close` to specify different characters for opening and\n *   closing fences.\n * @property {never} [fence]\n *   If `marker` is set, `fence` must not be set.\n *\n * @typedef FenceProps\n *   Fence configuration.\n * @property {Info | string} fence\n *   Complete fences.\n *\n *   This can be used when fences contain different characters or lengths\n *   other than 3.\n *   Pass `open` and `close` to interface to specify different characters for opening and\n *   closing fences.\n * @property {never} [marker]\n *   If `fence` is set, `marker` must not be set.\n *\n * @typedef {(MatterProps & FenceProps) | (MatterProps & MarkerProps)} Matter\n *   Fields describing a kind of matter.\n *\n *   > 👉 **Note**: using `anywhere` is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n *   > 👉 **Note**: `marker` and `fence` are mutually exclusive.\n *   > If `marker` is set, `fence` must not be set, and vice versa.\n *\n * @typedef {Matter | Preset | Array<Matter | Preset>} Options\n *   Configuration.\n */\n\n\n\nconst own = {}.hasOwnProperty\nconst markers = {yaml: '-', toml: '+'}\n\n/**\n * Simplify options by normalizing them to an array of matters.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration (default: `'yaml'`).\n * @returns {Array<Matter>}\n *   List of matters.\n */\nfunction toMatters(options) {\n  /** @type {Array<Matter>} */\n  const result = []\n  let index = -1\n\n  /** @type {Array<Matter | Preset>} */\n  const presetsOrMatters = Array.isArray(options)\n    ? options\n    : options\n    ? [options]\n    : ['yaml']\n\n  while (++index < presetsOrMatters.length) {\n    result[index] = matter(presetsOrMatters[index])\n  }\n\n  return result\n}\n\n/**\n * Simplify an option.\n *\n * @param {Matter | Preset} option\n *   Configuration.\n * @returns {Matter}\n *   Matter.\n */\nfunction matter(option) {\n  let result = option\n\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw (0,fault__WEBPACK_IMPORTED_MODULE_0__.fault)('Missing matter definition for `%s`', result)\n    }\n\n    result = {type: result, marker: markers[result]}\n  } else if (typeof result !== 'object') {\n    throw (0,fault__WEBPACK_IMPORTED_MODULE_0__.fault)('Expected matter to be an object, not `%j`', result)\n  }\n\n  if (!own.call(result, 'type')) {\n    throw (0,fault__WEBPACK_IMPORTED_MODULE_0__.fault)('Missing `type` in matter `%j`', result)\n  }\n\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw (0,fault__WEBPACK_IMPORTED_MODULE_0__.fault)('Missing `marker` or `fence` in matter `%j`', result)\n  }\n\n  return result\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbWljcm9tYXJrLWV4dGVuc2lvbi1mcm9udG1hdHRlckAyLjAuMC9ub2RlX21vZHVsZXMvbWljcm9tYXJrLWV4dGVuc2lvbi1mcm9udG1hdHRlci9kZXYvbGliL3RvLW1hdHRlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsaUJBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsUUFBUTtBQUN0QjtBQUNBLGNBQWMsNEJBQTRCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZUFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLE9BQU87QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGVBQWU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxPQUFPO0FBQ3JCO0FBQ0E7QUFDQSxhQUFhLDBEQUEwRDtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDBDQUEwQztBQUN2RDtBQUNBOztBQUUyQjs7QUFFM0IsY0FBYztBQUNkLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0QkFBNEI7QUFDdkM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNPO0FBQ1AsYUFBYSxlQUFlO0FBQzVCO0FBQ0E7O0FBRUEsYUFBYSx3QkFBd0I7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSw0Q0FBSztBQUNqQjs7QUFFQSxjQUFjO0FBQ2QsSUFBSTtBQUNKLFVBQVUsNENBQUs7QUFDZjs7QUFFQTtBQUNBLFVBQVUsNENBQUs7QUFDZjs7QUFFQTtBQUNBLFVBQVUsNENBQUs7QUFDZjs7QUFFQTtBQUNBIiwic291cmNlcyI6WyIvaG9tZS9icm9uemUvY29kaW5nL2ZzYWttL25vZGVfbW9kdWxlcy8ucG5wbS9taWNyb21hcmstZXh0ZW5zaW9uLWZyb250bWF0dGVyQDIuMC4wL25vZGVfbW9kdWxlcy9taWNyb21hcmstZXh0ZW5zaW9uLWZyb250bWF0dGVyL2Rldi9saWIvdG8tbWF0dGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHsndG9tbCcgfCAneWFtbCd9IFByZXNldFxuICogICBLbm93biBuYW1lIG9mIGEgZnJvbnRtYXR0ZXIgc3R5bGUuXG4gKlxuICogQHR5cGVkZWYgSW5mb1xuICogICBTZXF1ZW5jZS5cbiAqXG4gKiAgIERlcGVuZGluZyBvbiBob3cgdGhpcyBzdHJ1Y3R1cmUgaXMgdXNlZCwgaXQgcmVmbGVjdHMgYSBtYXJrZXIgb3IgYSBmZW5jZS5cbiAqIEBwcm9wZXJ0eSB7c3RyaW5nfSBjbG9zZVxuICogICBDbG9zaW5nLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IG9wZW5cbiAqICAgT3BlbmluZy5cbiAqXG4gKiBAdHlwZWRlZiBNYXR0ZXJQcm9wc1xuICogICBGaWVsZHMgZGVzY3JpYmluZyBhIGtpbmQgb2YgbWF0dGVyLlxuICogQHByb3BlcnR5IHtzdHJpbmd9IHR5cGVcbiAqICAgTm9kZSB0eXBlIHRvIHRva2VuaXplIGFzLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2FueXdoZXJlPWZhbHNlXVxuICogICBXaGV0aGVyIG1hdHRlciBjYW4gYmUgZm91bmQgYW55d2hlcmUgaW4gdGhlIGRvY3VtZW50LCBub3JtYWxseSwgb25seSBtYXR0ZXJcbiAqICAgYXQgdGhlIHN0YXJ0IG9mIHRoZSBkb2N1bWVudCBpcyByZWNvZ25pemVkLlxuICpcbiAqICAgPiDwn5GJICoqTm90ZSoqOiB1c2luZyB0aGlzIGlzIGEgdGVycmlibGUgaWRlYS5cbiAqICAgPiBJdOKAmXMgY2FsbGVkIGZyb250bWF0dGVyLCBub3QgbWF0dGVyLWluLXRoZS1taWRkbGUgb3Igc28uXG4gKiAgID4gVGhpcyBtYWtlcyB5b3VyIG1hcmtkb3duIGxlc3MgcG9ydGFibGUuXG4gKlxuICogQHR5cGVkZWYgTWFya2VyUHJvcHNcbiAqICAgTWFya2VyIGNvbmZpZ3VyYXRpb24uXG4gKiBAcHJvcGVydHkge0luZm8gfCBzdHJpbmd9IG1hcmtlclxuICogICBDaGFyYWN0ZXIgcmVwZWF0ZWQgMyB0aW1lcywgdXNlZCBhcyBjb21wbGV0ZSBmZW5jZXMuXG4gKlxuICogICBGb3IgZXhhbXBsZSB0aGUgY2hhcmFjdGVyIGAnLSdgIHdpbGwgcmVzdWx0IGluIGAnLS0tJ2AgYmVpbmcgdXNlZCBhcyB0aGVcbiAqICAgZmVuY2VcbiAqICAgUGFzcyBgb3BlbmAgYW5kIGBjbG9zZWAgdG8gc3BlY2lmeSBkaWZmZXJlbnQgY2hhcmFjdGVycyBmb3Igb3BlbmluZyBhbmRcbiAqICAgY2xvc2luZyBmZW5jZXMuXG4gKiBAcHJvcGVydHkge25ldmVyfSBbZmVuY2VdXG4gKiAgIElmIGBtYXJrZXJgIGlzIHNldCwgYGZlbmNlYCBtdXN0IG5vdCBiZSBzZXQuXG4gKlxuICogQHR5cGVkZWYgRmVuY2VQcm9wc1xuICogICBGZW5jZSBjb25maWd1cmF0aW9uLlxuICogQHByb3BlcnR5IHtJbmZvIHwgc3RyaW5nfSBmZW5jZVxuICogICBDb21wbGV0ZSBmZW5jZXMuXG4gKlxuICogICBUaGlzIGNhbiBiZSB1c2VkIHdoZW4gZmVuY2VzIGNvbnRhaW4gZGlmZmVyZW50IGNoYXJhY3RlcnMgb3IgbGVuZ3Roc1xuICogICBvdGhlciB0aGFuIDMuXG4gKiAgIFBhc3MgYG9wZW5gIGFuZCBgY2xvc2VgIHRvIGludGVyZmFjZSB0byBzcGVjaWZ5IGRpZmZlcmVudCBjaGFyYWN0ZXJzIGZvciBvcGVuaW5nIGFuZFxuICogICBjbG9zaW5nIGZlbmNlcy5cbiAqIEBwcm9wZXJ0eSB7bmV2ZXJ9IFttYXJrZXJdXG4gKiAgIElmIGBmZW5jZWAgaXMgc2V0LCBgbWFya2VyYCBtdXN0IG5vdCBiZSBzZXQuXG4gKlxuICogQHR5cGVkZWYgeyhNYXR0ZXJQcm9wcyAmIEZlbmNlUHJvcHMpIHwgKE1hdHRlclByb3BzICYgTWFya2VyUHJvcHMpfSBNYXR0ZXJcbiAqICAgRmllbGRzIGRlc2NyaWJpbmcgYSBraW5kIG9mIG1hdHRlci5cbiAqXG4gKiAgID4g8J+RiSAqKk5vdGUqKjogdXNpbmcgYGFueXdoZXJlYCBpcyBhIHRlcnJpYmxlIGlkZWEuXG4gKiAgID4gSXTigJlzIGNhbGxlZCBmcm9udG1hdHRlciwgbm90IG1hdHRlci1pbi10aGUtbWlkZGxlIG9yIHNvLlxuICogICA+IFRoaXMgbWFrZXMgeW91ciBtYXJrZG93biBsZXNzIHBvcnRhYmxlLlxuICpcbiAqICAgPiDwn5GJICoqTm90ZSoqOiBgbWFya2VyYCBhbmQgYGZlbmNlYCBhcmUgbXV0dWFsbHkgZXhjbHVzaXZlLlxuICogICA+IElmIGBtYXJrZXJgIGlzIHNldCwgYGZlbmNlYCBtdXN0IG5vdCBiZSBzZXQsIGFuZCB2aWNlIHZlcnNhLlxuICpcbiAqIEB0eXBlZGVmIHtNYXR0ZXIgfCBQcmVzZXQgfCBBcnJheTxNYXR0ZXIgfCBQcmVzZXQ+fSBPcHRpb25zXG4gKiAgIENvbmZpZ3VyYXRpb24uXG4gKi9cblxuaW1wb3J0IHtmYXVsdH0gZnJvbSAnZmF1bHQnXG5cbmNvbnN0IG93biA9IHt9Lmhhc093blByb3BlcnR5XG5jb25zdCBtYXJrZXJzID0ge3lhbWw6ICctJywgdG9tbDogJysnfVxuXG4vKipcbiAqIFNpbXBsaWZ5IG9wdGlvbnMgYnkgbm9ybWFsaXppbmcgdGhlbSB0byBhbiBhcnJheSBvZiBtYXR0ZXJzLlxuICpcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IFtvcHRpb25zPSd5YW1sJ11cbiAqICAgQ29uZmlndXJhdGlvbiAoZGVmYXVsdDogYCd5YW1sJ2ApLlxuICogQHJldHVybnMge0FycmF5PE1hdHRlcj59XG4gKiAgIExpc3Qgb2YgbWF0dGVycy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvTWF0dGVycyhvcHRpb25zKSB7XG4gIC8qKiBAdHlwZSB7QXJyYXk8TWF0dGVyPn0gKi9cbiAgY29uc3QgcmVzdWx0ID0gW11cbiAgbGV0IGluZGV4ID0gLTFcblxuICAvKiogQHR5cGUge0FycmF5PE1hdHRlciB8IFByZXNldD59ICovXG4gIGNvbnN0IHByZXNldHNPck1hdHRlcnMgPSBBcnJheS5pc0FycmF5KG9wdGlvbnMpXG4gICAgPyBvcHRpb25zXG4gICAgOiBvcHRpb25zXG4gICAgPyBbb3B0aW9uc11cbiAgICA6IFsneWFtbCddXG5cbiAgd2hpbGUgKCsraW5kZXggPCBwcmVzZXRzT3JNYXR0ZXJzLmxlbmd0aCkge1xuICAgIHJlc3VsdFtpbmRleF0gPSBtYXR0ZXIocHJlc2V0c09yTWF0dGVyc1tpbmRleF0pXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG5cbi8qKlxuICogU2ltcGxpZnkgYW4gb3B0aW9uLlxuICpcbiAqIEBwYXJhbSB7TWF0dGVyIHwgUHJlc2V0fSBvcHRpb25cbiAqICAgQ29uZmlndXJhdGlvbi5cbiAqIEByZXR1cm5zIHtNYXR0ZXJ9XG4gKiAgIE1hdHRlci5cbiAqL1xuZnVuY3Rpb24gbWF0dGVyKG9wdGlvbikge1xuICBsZXQgcmVzdWx0ID0gb3B0aW9uXG5cbiAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB7XG4gICAgaWYgKCFvd24uY2FsbChtYXJrZXJzLCByZXN1bHQpKSB7XG4gICAgICB0aHJvdyBmYXVsdCgnTWlzc2luZyBtYXR0ZXIgZGVmaW5pdGlvbiBmb3IgYCVzYCcsIHJlc3VsdClcbiAgICB9XG5cbiAgICByZXN1bHQgPSB7dHlwZTogcmVzdWx0LCBtYXJrZXI6IG1hcmtlcnNbcmVzdWx0XX1cbiAgfSBlbHNlIGlmICh0eXBlb2YgcmVzdWx0ICE9PSAnb2JqZWN0Jykge1xuICAgIHRocm93IGZhdWx0KCdFeHBlY3RlZCBtYXR0ZXIgdG8gYmUgYW4gb2JqZWN0LCBub3QgYCVqYCcsIHJlc3VsdClcbiAgfVxuXG4gIGlmICghb3duLmNhbGwocmVzdWx0LCAndHlwZScpKSB7XG4gICAgdGhyb3cgZmF1bHQoJ01pc3NpbmcgYHR5cGVgIGluIG1hdHRlciBgJWpgJywgcmVzdWx0KVxuICB9XG5cbiAgaWYgKCFvd24uY2FsbChyZXN1bHQsICdmZW5jZScpICYmICFvd24uY2FsbChyZXN1bHQsICdtYXJrZXInKSkge1xuICAgIHRocm93IGZhdWx0KCdNaXNzaW5nIGBtYXJrZXJgIG9yIGBmZW5jZWAgaW4gbWF0dGVyIGAlamAnLCByZXN1bHQpXG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/micromark-extension-frontmatter@2.0.0/node_modules/micromark-extension-frontmatter/dev/lib/to-matters.js\n");

/***/ })

};
;